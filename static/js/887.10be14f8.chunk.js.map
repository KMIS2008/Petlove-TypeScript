{"version":3,"file":"static/js/887.10be14f8.chunk.js","mappings":"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","sources":["Pages/AddPet/AddPet.styled.tsx","components/AddPetForm/AddPetForm .styled.tsx","components/AddPetForm/AddPetForm.tsx","Pages/AddPet/AddPet.tsx","components/PetBlock/PetBlock.styled.tsx","components/PetBlock/PetBlock.tsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div` \nmax-width: 100%;\n\n@media (min-width: 1280px) {\n  display: flex;\n  gap: 20px;\n}\n`\n\nexport const ContainerForm = styled.form` \npadding:  ${p=>p.theme.spacing(4)};\n\n@media (min-width: 768px) {\n  padding: 40px 136px;\n}\n\n@media (min-width: 1280px) {\n  padding: 60px 80px;\n}\n`\n\nexport const Title = styled.label` \nfont-family: Manrope;\nfont-size: 28px;\nfont-weight: 700;\nline-height: 1px;\nletter-spacing: -0.03em;\ncolor: #262626;\n`\n\nexport const TitleSpan = styled.span` \nfont-family: Manrope;\nfont-size: 14px;\nfont-weight: 700;\nline-height: 1,29px;\ncolor: #2B2B2A66;\n`\n\nexport const RadioGroup = styled.div`\n  display: flex;\n  gap: ${p=>p.theme.spacing(2)};\n  margin-bottom: 16px;\n  margin-top: 20px;\n`;\n\nexport const SvgIcon = styled.svg`\n  width: 32px;\n  height: 32px;\n  cursor: pointer;\n`;\n\nexport const Error = styled.span`\nfont-family: Manrope;\nfont-size: 12px;\nfont-weight: 500;\nline-height: 1,16;\nletter-spacing: -0.03em;\n\n  color: #EF2447;\n  margin-bottom: 8px;\n`;\n\nexport const ButtonSubmit = styled.button` \ndisplay: block;\nmargin: 0 auto;\nmargin-bottom: 20px;\nborder-radius: 50%;\n\n&:hover{\n   border: 3px solid #FBE7C1;\n}\n`\nexport const ContainerInput = styled.div`\n  display: flex;\n  gap: 10px;\n  margin-bottom: 16px;\n`;\n\nexport const InputWrapper = styled.div`\nwidth: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n\nexport const Input = styled.input`\nwidth: 100%;\n  margin-bottom: 5px;\n  padding: 9px 20px;\n  gap: 10px;\n  border-radius: 30px;\n  border: 1px solid #26262626;\n  outline: none;\n  \n  &::placeholder {\n    color: rgba(38, 38, 38, 0.5);\n  }\n\n  &:hover {\n    border: 1px solid ${p => p.theme.colors.yellow};\n  }\n`;\n\n\nexport const ButtonLoad = styled.button` \ndisplay: flex;\njustify-content: center;\nalign-items: center;\nwidth: 50%;\nheight: 36px;\npadding: 10px;\ngap: 5px;\nborder-radius: 30px;\nborder:none;\n\nbackground-color: #FFF4DF;\n\n&:hover{\n    background-color: #FBE7C1;\n}\n`\nexport const ButtonLoadSpan = styled.span` \nfont-family: Manrope;\nfont-size: 12px;\nfont-weight: 500;\nline-height: 1,33;\nletter-spacing: -0.02em;\ncolor: #262626;\n`\n\nexport const SuccessMessage = styled.p`\n  margin-left: 10px;\n  font-family: Manrope;\n  font-size: 10px;\n  font-weight: 500;\n  line-height: 1.2;\n  letter-spacing: -0.03em;\n  text-align: left;\n  color: #08AA83;\n`;\n\nexport const WrapperSelect = styled.div`\nposition: relative;\n width: 100%;\n`;\n\nexport const SvgCalendar = styled.svg`\nposition: absolute;\ntop: 25%;\nright: 10px;\n\n`;\n\nexport const WrapperButton = styled.div`\ndisplay: flex;\ngap: ${p => p.theme.spacing(2)};\njustify-content: end;\n`;\n\nexport const Button = styled.button`\nwidth: 100px;\nheight: 42px;\npadding: 12px 34px 12px 34px;\ngap: 10px;\nborder-radius: 30px;\nbackground: #2626260D;\n\nfont-family: Manrope;\nfont-size: 14px;\nfont-weight: 700;\nline-height: 1,29;\nletter-spacing: -0.03em;\ncolor: #262626;\n\n&:hover {\n  background-color: ${p => p.theme.colors.yellow};\n  color: ${p => p.theme.colors.white};\n}\n`;","import styled from 'styled-components';\n\ninterface InputContainerProps{\n  $isError?:boolean,\n  $isSuccess?:boolean\n}\n\nexport const ContainerForm = styled.form` \npadding:  ${p=>p.theme.spacing(4)};\n\n@media (min-width: 768px) {\n  padding: 40px 136px;\n}\n\n@media (min-width: 1280px) {\n  padding: 60px 80px;\n}\n`\n\nexport const Title = styled.label` \nfont-family: Manrope;\nfont-size: 28px;\nfont-weight: 700;\nline-height: 1px;\nletter-spacing: -0.03em;\ncolor: #262626;\n`\n\nexport const TitleSpan = styled.span` \nfont-family: Manrope;\nfont-size: 14px;\nfont-weight: 700;\nline-height: 1,29px;\ncolor: #2B2B2A66;\n`\n\nexport const RadioGroup = styled.div`\n  display: flex;\n  gap: ${p=>p.theme.spacing(2)};\n  margin-bottom: 16px;\n  margin-top: 20px;\n  cursor: pointer;\n`;\n\nexport const SvgIcon = styled.svg<{ selected: boolean }>`\n  width: 32px;\n  height: 32px;\n  cursor: pointer;\n  cursor: pointer;\n`;\n\nexport const Error = styled.span`\nfont-family: Manrope;\nfont-size: 12px;\nfont-weight: 500;\nline-height: 1,16;\nletter-spacing: -0.03em;\n\n  color: #EF2447;\n  margin-bottom: 8px;\n`;\n\nexport const Avatar = styled.svg` \ndisplay: block;\nmargin: 0 auto;\nmargin-bottom: 20px;\n`\nexport const AvatarNew = styled.img` \ndisplay: block;\nmargin: 0 auto;\nmargin-bottom: 20px;\n`\n\nexport const ContainerInput = styled.div`\n  display: flex;\n  gap: 10px;\n  margin-bottom: 16px;\n`;\n\nexport const InputWrapper = styled.div`\nwidth: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n\nexport const Input = styled.input<InputContainerProps>`\n  width: 100%;\n  height: 42px;\n  margin-bottom: 20px;\n  padding: 9px 20px;\n  gap: 10px;\n  border-radius: 30px;\n  border: 1px solid #26262626;\n  border: 1px solid ${({ $isError, $isSuccess }) => ($isError ? 'red' : $isSuccess ? 'green' : '#08AA83')};\n  outline: none;\n  \n  &::placeholder {\n    color: rgba(38, 38, 38, 0.5);\n  }\n\n  &:hover {\n    border: 1px solid ${p => p.theme.colors.yellow};\n  }\n\n  @media (min-width: 768px) {\n  height: 52px;\n }\n`;\n\nexport const ButtonLoad = styled.button` \ndisplay: flex;\njustify-content: center;\nalign-items: center;\nwidth: 50%;\nheight: 42px;\npadding: 10px;\ngap: 5px;\nborder-radius: 30px;\nborder:none;\ncursor: pointer;\n\nbackground-color: #FFF4DF;\n\n&:hover{\n    background-color: #FBE7C1;\n}\n\n@media (min-width: 768px) {\n  height: 52px;\n }\n`\nexport const ButtonLoadSpan = styled.span` \nfont-family: Manrope;\nfont-size: 12px;\nfont-weight: 500;\nline-height: 1,33;\nletter-spacing: -0.02em;\ncolor: #262626;\n`\n\nexport const SuccessMessage = styled.p`\n  margin-left: 10px;\n  font-family: Manrope;\n  font-size: 10px;\n  font-weight: 500;\n  line-height: 1.2;\n  letter-spacing: -0.03em;\n  text-align: left;\n  color: #08AA83;\n`;\n\nexport const WrapperSelect = styled.div`\nposition: relative;\n width: 100%;\n\n`;\n\nexport const SvgCalendar = styled.svg`\nposition: absolute;\ntop: 25%;\nright: 20px;\n`;\n\nexport const WrapperButton = styled.div`\ndisplay: flex;\ngap: ${p => p.theme.spacing(2)};\njustify-content: end;\n`;\n\nexport const Button = styled.button`\nwidth: 100px;\nheight: 42px;\npadding: 12px 34px 12px 34px;\ngap: 10px;\nborder-radius: 30px;\nbackground: #2626260D;\n\nfont-family: Manrope;\nfont-size: 14px;\nfont-weight: 700;\nline-height: 1,29;\nletter-spacing: -0.03em;\ncolor: #262626;\ncursor: pointer;\n\n&:hover {\n  background-color: ${p => p.theme.colors.yellow};\n  color: ${p => p.theme.colors.white};\n}\n\n@media (min-width: 768px) {\n  width: 170px;\n  height: 48px;\n}\n`;","import { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport { useNavigate } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport React from 'react';\nimport axios from 'axios';\nimport { nanoid } from 'nanoid';\nimport Select from 'react-select';\nimport { NotificationManager} from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\nimport sprite from '../../images/sprite.svg';\nimport {addPet, AddPetProps} from '../../redux/operations';\nimport { Title, TitleSpan, ContainerForm, Avatar, AvatarNew,\n    RadioGroup, SvgIcon, Error, ContainerInput, InputWrapper, \n    Input, ButtonLoad, ButtonLoadSpan,SuccessMessage, \n    WrapperSelect, SvgCalendar, WrapperButton, Button } from './AddPetForm .styled';\nimport { useDispatch } from 'react-redux';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport DatePicker from 'react-datepicker';\nimport { AppDispatch } from '../../redux/store';\n\n\ninterface FormValue{\n  title:string,\n  name:string,\n  species:string,\n  sex: string,\n  birthday:string,\n  imgURL:string,\n  imgUrl?:string,\n}\n\nconst useAppDispatch:()=>AppDispatch=useDispatch;\n\n\nconst SignupSchema = Yup.object().shape({\n    title: Yup.string().required('Required'),\n    name: Yup.string().required('Required'),\n    species: Yup.string().required('Required'),\n    sex: Yup.string().required('Required'),\n    birthday: Yup.string()\n                 .matches(/^\\d{4}-\\d{2}-\\d{2}$/,'Enter a valid Birthday')\n                 .required('Required'),\n    imgURL: Yup.string()\n              .matches(/^https?:\\/\\/.*\\.(?:png|jpg|jpeg|gif|bmp|webp)$/,'Enter a valid Url')\n              .required('Required'),\n});\n\n\nexport const AddPetForm =()=>{\n  const customStyles= {\n    placeholder: (provided) => ({\n      ...provided,\n      color: '#26262680', \n    }),\n    control: (provided, state) => ({\n      ...provided,\n      borderRadius: '30px',\n      height: state.isMulti ? '52px' : '42px', \n      border: state.isFocused ? '1px solid #F6B83D' : '1px solid #26262626',\n      boxShadow: state.isFocused ? '0 0 0 1px #F6B83D' : 'none',\n      '&:hover': {\n        border: '1px solid #F6B83D',\n      },\n    }),\n\n    option: (provided, state) => ({\n      ...provided,\n      borderRadius: '15px',\n      border: 'none',\n      padding: '0 12px',\n      fontFamily: 'Manrope',\n      fontSize: '14px',\n      fontWeight: '500',\n      lineHeight: '1.29',\n      letterSpacing: '-0.03em',\n      color: state.isSelected ? '#fff' : '#26262699',\n      backgroundColor: state.isSelected ? '#262626' : '#fff',\n      '&:hover': {\n        color: '#262626',\n      },\n    }),\n  };\n\n      const defaultValues = {\n        title: '',\n        name: '',\n        species: '',\n        sex: '',\n        birthday: '',\n        imgURL: '',\n      };\n\n    \n        const navigator = useNavigate(); \n        const dispatch=useAppDispatch();\n\n        const [selectedSex, setSelectedSex] = useState('');\n        const [speciesOptions, setSpeciesOptions] = useState([]);\n        const[isAvatar, setAvatar]=useState(false);\n        const [startDate, setStartDate] = useState(null);\n    \n        const { register, handleSubmit, setValue, formState: { errors, touchedFields }, reset, watch } = useForm<FormValue>({\n            resolver: yupResolver(SignupSchema),\n            mode: 'onBlur',\n            defaultValues\n          });\n\n          const imgURL = watch('imgURL');\n          const name =watch('name');\n      \n        const onSubmit = async (data:AddPetProps) => {\n            try {\n                await dispatch(addPet(data));\n                reset();\n                navigator('/profile');\n            } catch (error) {\n                \n              NotificationManager.error(error.message || 'An error occurred', 'Error', 5000);\n            }\n        };\n\n    \n        const handleBack=()=>{\n           navigator('/profile');\n        }\n    \n        const handleSexChange = (value:string) => {\n            setSelectedSex(value);\n            setValue('sex', value);\n          };\n    \n          const getIcon = (sex:string, selected:boolean) => {\n            const iconMap = {\n              female: selected ? 'icon-female-1' : 'icon-female',\n              male: selected ? 'icon-male-1' : 'icon-male',\n              multiple: selected ? 'icon-multiple-1' : 'icon-multiple',\n            };\n            return iconMap[sex];\n          };\n\n          const handleLoadingAvatar=()=>{\n            setAvatar(true)\n          }\n    \n          useEffect(() => {\n            \n            const fetchSpeciesOptions = async () => {\n              const response = await axios.get('/notices/species');\n              setSpeciesOptions(response.data);\n            };\n        \n            fetchSpeciesOptions();\n          }, []);\n    \n          const isspeciesOptions = speciesOptions.map(option => ({\n            key: nanoid(),\n            value: `${option}`,\n            label: `${option}`\n          }));\n\n          const handleDateChange = (date) => {\n            setStartDate(date);\n            const formattedDate = date ? date.toISOString().split('T')[0] : '';\n            setValue('birthday', formattedDate);\n        };\n          \n    return(\n        <>\n\n            <ContainerForm onSubmit={handleSubmit(onSubmit)}>\n                <Title> Add my pet / \n                        <TitleSpan>Personal details</TitleSpan>\n                </Title>\n\n                <RadioGroup>\n                    <SvgIcon\n                       selected={selectedSex === 'female'}\n                       onClick={() => handleSexChange('female')}>\n                             <use xlinkHref={`${sprite}#${getIcon('female', selectedSex === 'female')}`} />\n                    </SvgIcon>\n\n                    <SvgIcon\n                       selected={selectedSex === 'male'}\n                       onClick={() => handleSexChange('male')}>\n                              <use xlinkHref={`${sprite}#${getIcon('male', selectedSex === 'male')}`} />\n                    </SvgIcon>\n\n                   <SvgIcon\n                       selected={selectedSex === 'multiple'}\n                       onClick={() => handleSexChange('multiple')}>\n                              <use xlinkHref={`${sprite}#${getIcon('multiple', selectedSex === 'multiple')}`} />\n                    </SvgIcon>\n                </RadioGroup>\n      {errors.sex && <Error>{errors.sex.message}</Error>}\n            \n               {!isAvatar  ? \n                            <Avatar width={68} height={68}>\n                               <use xlinkHref={sprite + '#icon-paw'}/>\n                            </Avatar>               \n                      :\n                            <AvatarNew src={imgURL} alt={name} width={68} height={68}/>}\n\n                 <ContainerInput>\n                     <InputWrapper>\n                       <Input id=\"imgURL\" \n                              placeholder=\"Enter URL\"\n                            $isError={!!errors.imgUrl}\n                            $isSuccess={!errors.imgUrl && touchedFields.imgUrl}\n\n                              {...register('imgURL', {\n                                required: 'Required',\n                                pattern: {\n                                    value: /^https?:\\/\\/.*\\.(?:png|jpg|jpeg|gif|bmp|webp)$/,\n                                    message: 'Enter a valid imgUrl',\n                                },\n                            })} />\n                       {errors.imgUrl && <Error>{errors.imgUrl.message}</Error>} \n                       {!errors.imgUrl && touchedFields.imgUrl && <SuccessMessage>imgUrl is secure</SuccessMessage>}                    \n                     </InputWrapper>\n\n                       <ButtonLoad type='button' onClick={handleLoadingAvatar}>\n                              <ButtonLoadSpan> Upload  photo</ButtonLoadSpan>\n                              <svg width={16} height={16}>\n                                  <use xlinkHref={sprite + '#icon-upload-cloud'}/>\n                              </svg>\n                       </ButtonLoad>\n                 </ContainerInput>\n\n                 <Input id=\"title\" \n                            placeholder=\"Title\"\n                            $isError={!!errors.title}\n                            $isSuccess={!errors.title && touchedFields.title}\n\n                              {...register('title', {\n                                required: 'Required',\n                            })} />\n                       {errors.title && <Error>{errors.title.message}</Error>} \n                       {!errors.title && touchedFields.title && <SuccessMessage>Title is secure</SuccessMessage>} \n\n                  <Input id=\"name\" \n                            placeholder=\"Pet’s Name\"\n                            $isError={!!errors.name}\n                            $isSuccess={!errors.name && touchedFields.name}\n\n                              {...register('name', {\n                                required: 'Required',\n                            })} />\n                       {errors.name && <Error>{errors.name.message}</Error>} \n                       {!errors.name && touchedFields.name && <SuccessMessage>Name is secure</SuccessMessage>} \n\n                <ContainerInput>\n                <WrapperSelect>\n                      <DatePicker\n                            selected={startDate}\n                            onChange={handleDateChange}\n                            dateFormat=\"yyyy-MM-dd\"\n                            customInput={<Input\n                                placeholder=\"0000-00-00\"\n                                $isError={!!errors.birthday}\n                                $isSuccess={!errors.birthday && touchedFields.birthday}\n                                {...register('birthday')} />}\n                        />\n                      {errors.birthday && <Error>{errors.birthday.message}</Error>}\n                      {!errors.birthday && touchedFields.birthday && <SuccessMessage>Birthday is secure</SuccessMessage>} \n\n                      <SvgCalendar\n                          width={18}\n                          height={18}\n                          onClick={() => {\n                              const inputElement = document.querySelector('.react-datepicker__input-container input') as HTMLInputElement | null;\n                              if (inputElement) {\n                              inputElement.focus();\n                               }\n                          }}\n>\n                        <use xlinkHref={sprite + '#icon-calendar'} />\n                     </SvgCalendar>\n                </WrapperSelect>\n\n                 <WrapperSelect>\n                        <Select id=\"species\"\n                                styles={customStyles}\n                                placeholder=\"Type of pet\"\n                                isClearable\n                                options={isspeciesOptions}\n                               {...register('species', { required: 'Required' })}\n                               onChange={value => setValue('species', value?.value || '')}\n                        />\n                  {errors.species && <Error>{errors.species.message}</Error>}\n                 </WrapperSelect>\n\n                </ContainerInput>\n\n                  <WrapperButton>\n                    <Button type='button' \n                            onClick={handleBack}>Back</Button>\n                    <Button type='submit'>Submit</Button>\n                  </WrapperButton>\n\n            </ContainerForm> \n        </>\n    )}","import {PetBlock} from '../../components/PetBlock/PetBlock';\nimport DogAddMobile1 from '../../images/DogAddMobile1.jpg';\nimport DogAddMobile2 from '../../images/DogAddMobile2.jpg';\nimport DogAddMobile3 from '../../images/DogAddMobile3.jpg';\nimport DogAddTablet1 from '../../images/DogAddTablet1.jpg';\nimport DogAddTablet2 from '../../images/DogAddTablet2.jpg';\nimport DogAddTablet3 from '../../images/DogAddTablet3.jpg';\nimport DogAddDesctop1 from '../../images/DogAddDesctop1.jpg';\nimport DogAddDesctop2 from '../../images/DogAddDesctop2.jpg';\nimport DogAddDesctop3 from '../../images/DogAddDesctop3.jpg';\n\nimport {Container,  } from './AddPet.styled';\nimport { AddPetForm } from '../../components/AddPetForm/AddPetForm';\n\nexport default function AddPet (){\n\n    return(\n        <Container>\n            <PetBlock \n                      imgDesctop1={DogAddDesctop1}\n                      imgDesctop2={DogAddDesctop2}\n                      imgDesctop3={DogAddDesctop3}\n                      imgTablet1={DogAddTablet1}\n                      imgTablet2={DogAddTablet2}\n                      imgTablet3={DogAddTablet3}\n                      imgMobile1={DogAddMobile1} \n                      imgMobile2={DogAddMobile2} \n                      imgMobile3={DogAddMobile3}\n                      />\n            <AddPetForm/>\n        </Container>\n    )\n}","import styled from \"styled-components\";\n\nexport const Img = styled.img` \nmargin-bottom : ${p=>p.theme.spacing(14)};\nborder-radius: 55px;\nobject-fit: cover;\n\n@media (min-width: 768px) {\n    border-radius: 90px;\n}\n`","import {Img} from './PetBlock.styled';\n\nexport const PetBlock = ({imgDesctop1, imgDesctop2, imgDesctop3,\n                          imgTablet1, imgTablet2, imgTablet3,\n                          imgMobile1, imgMobile2, imgMobile3}\n )=>{\n    return (\n        <picture>\n            <source\n            media=\"(min-width: 1280px)\"\n            srcSet={`\n                ${imgDesctop1} 1x,\n                ${imgDesctop2} 2x,\n                ${imgDesctop3} 3x\n                `}\n            />\n            <source\n            media=\"(min-width: 768px)\"\n            srcSet={`\n                ${imgTablet1} 1x,\n                ${imgTablet2} 2x,\n                ${imgTablet3} 3x\n                `}\n            />\n            <source\n             media=\"(min-width: 375px)\"\n             srcSet={`\n               ${imgMobile1} 1x,\n               ${imgMobile2} 2x,\n               ${imgMobile3} 3x\n               `}\n            />\n            <source\n             media=\"(min-width: 320px)\"\n             srcSet={`\n               ${imgMobile1} 1x,\n               ${imgMobile2} 2x,\n               ${imgMobile3} 3x\n               `}\n            />\n            <Img alt=\"dog\"\n                src={imgMobile1} \n                srcSet={`\n                ${imgMobile1} 1x,\n                ${imgMobile2} 2x,\n                ${imgMobile3} 3x\n                      `}\n                style={{ width: '100%', height: 'auto' }}/>\n\n        </picture>\n    )\n}"],"names":["Container","styled","div","form","p","theme","spacing","label","span","svg","button","input","colors","yellow","white","ContainerForm","Title","TitleSpan","RadioGroup","SvgIcon","Error","Avatar","AvatarNew","img","ContainerInput","InputWrapper","Input","_ref","$isError","$isSuccess","ButtonLoad","ButtonLoadSpan","SuccessMessage","WrapperSelect","SvgCalendar","WrapperButton","Button","useAppDispatch","useDispatch","SignupSchema","Yup","shape","title","required","name","species","sex","birthday","matches","imgURL","AddPetForm","navigator","useNavigate","dispatch","selectedSex","setSelectedSex","useState","speciesOptions","setSpeciesOptions","isAvatar","setAvatar","startDate","setStartDate","register","handleSubmit","setValue","formState","errors","touchedFields","reset","watch","useForm","resolver","yupResolver","mode","defaultValues","handleSexChange","value","getIcon","selected","female","male","multiple","useEffect","async","response","axios","get","data","fetchSpeciesOptions","isspeciesOptions","map","option","key","nanoid","_jsx","_Fragment","children","_jsxs","onSubmit","addPet","error","NotificationManager","message","onClick","xlinkHref","sprite","src","alt","width","height","id","placeholder","imgUrl","pattern","type","handleLoadingAvatar","DatePicker","onChange","date","formattedDate","toISOString","split","dateFormat","customInput","inputElement","document","querySelector","focus","Select","styles","provided","color","control","state","borderRadius","isMulti","border","isFocused","boxShadow","padding","fontFamily","fontSize","fontWeight","lineHeight","letterSpacing","isSelected","backgroundColor","isClearable","options","handleBack","AddPet","PetBlock","imgDesctop1","DogAddDesctop1","imgDesctop2","DogAddDesctop2","imgDesctop3","DogAddDesctop3","imgTablet1","DogAddTablet1","imgTablet2","DogAddTablet2","imgTablet3","DogAddTablet3","imgMobile1","DogAddMobile1","imgMobile2","DogAddMobile2","imgMobile3","DogAddMobile3","Img","media","srcSet","style"],"sourceRoot":""}