{"version":3,"file":"static/js/798.407ce2dd.chunk.js","mappings":"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","sources":["components/NoticesFilters/NoticesFilters.styled.tsx","components/NoticesFilters/NoticesFilters.tsx","Pages/Notices/Notices.tsx","components/NoticesItem/NoticeItrm.styled.tsx","components/ModalAttention/ModalAttention.styled.tsx","components/ModalAttention/ModalAttention.tsx","components/ModalNotice/ModalNotice.styled.tsx","components/ModalNotice/ModalNotice.tsx","components/NoticesItem/NoticesItem.tsx","components/NoticesList/NoticeList.styled.tsx","components/NoticesList/NoticesList.tsx","components/Pagination/Pagination.styled.tsx","components/Pagination/Pagination.tsx","components/SearchField/SearchField.styled.tsx","components/SearchField/SearchField.tsx","components/Title/title.styled.tsx","components/Title/Title.tsx","redux/selects.ts"],"sourcesContent":["import styled from \"styled-components\";\nimport { Field} from 'formik';\n\nexport const Container = styled.div`\nmargin-bottom: ${p=>p.theme.spacing(10)};\npadding: ${p=>p.theme.spacing(4)};\nborder-radius: 30px;\nbackground-color: #FFF4DF;\n`\n\nexport const ContainerTabletSelect = styled.div`\n@media (min-width: 768px) {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 10px; \n    justify-content: start;\n    align-items: center;\n}\n\n     @media (min-width: 1280px) {\n      flex-wrap: nowrap;\n    } \n`\n\nexport const ContainerSelect = styled.div`\ndisplay: flex;\ngap: ${p=>p.theme.spacing(2)};\nmargin-bottom: ${p=>p.theme.spacing(4)};\n\nflex-basis: 55%; \n\n@media (min-width: 1280px) {\nflex-basis: 50%; \nmargin-bottom:0%;\n}\n`\n\nexport const CustomSelect = styled(Field)`\n  width: 100%;\n  height: 42px;\n  padding: 0 12px;\n  border-radius: 30px;\n  border: none;\n\n  font-family: Manrope;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.29;\n  letter-spacing: -0.03em;\n  color: #262626;\n\n  &:focus {\n    outline: none;\n    color: ${(p) => p.theme.colors.yellow};\n  }\n\n  &:hover {\n    color: #26262699;\n    border: 1px solid #F6B83D;\n  }\n\n  @media (min-width: 768px) {\nflex-basis: 50%; \n}\n`;\n\nexport const CustomSelectType = styled(Field)`\n  width: 100%;\n  height: 42px;\n  padding: 0 12px;\n  border-radius: 30px;\n  border: none;\n\n  font-family: Manrope;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.29;\n  letter-spacing: -0.03em;\n  color: #262626;\n\n  &:focus {\n    outline: none;\n    color: ${(p) => p.theme.colors.yellow};\n  }\n\n  &:hover {\n    color: #26262699;\n    border: 1px solid #F6B83D;\n  }\n\n  @media (min-width: 768px) {\nflex-basis: 30%; \n}\n`;\n\nexport const Option = styled.option`\n\n  border: none;\n  font-family: Manrope;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.29;\n  letter-spacing: -0.03em;\n  color: #26262699;\n\n  &:hover {\n    color: ${(p) => p.theme.colors.yellow};\n  }\n`;\n\nexport const ContainerSvg = styled.div`\nposition: relative;\nalign-items: center;\n  margin-top: 20px;\n@media (min-width: 768px) {\n  flex-basis: 30%; \n  height: 48px;\n  margin-top: 0;\n}\n`\n\nexport const Svg = styled.svg`\nposition: absolute;\ntop: 25%;\nright: 10px;\n\nwidth: 18px;\nheight: 18px;\ncursor: pointer;\nfill: currentColor;\n`\n\nexport const SvgReset = styled.svg`\nposition: absolute;\ntop: 25%;\nright: 40px;\n\nwidth: 18px;\nheight: 18px;\ncursor: pointer;\nfill: currentColor;\n`\n\nexport const Reset = styled.svg`\nposition: absolute;\ntop: 25%;\nright: 5px;\n\nwidth: 18px;\nheight: 18px;\ncursor: pointer;\nfill: currentColor;\n`\n\nexport const Straight = styled.div`\nmargin-top: ${(p) => p.theme.spacing(2)};\nmargin-bottom: ${(p) => p.theme.spacing(4)};\nwidth: 100%;\nborder: 1px solid #2626261A;\n`\n\nexport const RadioGroup = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n`;\n\nexport const RadioButtonLabel = styled.label`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 10px 30px;\n  border: none;\n  border-radius: 30px;\n  background-color: ${(p) => p.theme.colors.white};\n  cursor: pointer;\n\n  font-family: Manrope;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1,29;\n  letter-spacing: -0.03em;\n  text-align: left;\n\n  color: #262626;\n\n  &:hover {\n    background-color: ${(p) => p.theme.colors.yellow};\n    color:${(p) => p.theme.colors.white};\n  }\n`;\n\nexport const RadioButton = styled(Field)`\n \n  display: none;\n\n  &:checked + ${RadioButtonLabel} {\n    background-color: ${(p) => p.theme.colors.yellow};\n    color: ${(p) => p.theme.colors.white};\n  }\n`;\n\nexport const Button = styled.button`\nwidth: 123px;\nheight: 42px;\nborder-radius: 30px;\n\ncolor: #262626;\n\nfont-family: Manrope;\nfont-size: 14px;\nfont-weight: 500;\nline-height: 1,5;\nletter-spacing: -0.03em;\nbackground-color: #FFFFFF;\nborder: 1px solid #F6B83D;\n\n&:hover{\n    background-color: #F6B83D;\n    color: #FFFFFF;\n}\n`","import {\n  Container, ContainerTabletSelect, ContainerSelect, CustomSelect, CustomSelectType,\n  Option, ContainerSvg, Svg, SvgReset, Straight, Reset,\n  RadioGroup, RadioButtonLabel, RadioButton, Button\n} from './NoticesFilters.styled';\nimport { SearchField } from \"../SearchField/SearchField\";\nimport Select from 'react-select';\nimport { Formik, Form } from 'formik';\nimport { useEffect, useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport axios from 'axios';\nimport sprite from '../../images/sprite.svg';\nimport { useDispatch } from 'react-redux';\nimport { getNoticesFilter } from '../../redux/operations';\nimport { AppDispatch } from '../../redux/store';\nimport { SingleValue } from 'react-select'; \n\ninterface LocationProps {\n  _id: string;\n  stateEn: string;\n  cityEn: string;\n  countyEn: string;\n}\n\ntype OptionType = { label: string, value: string };\n\nconst useAppDispatch:()=>AppDispatch=useDispatch;\n\naxios.defaults.baseURL = \"https://petlove.b.goit.study/api\";\n\n\nexport const NoticesFilters = ({ notices }) => {\n  const dispatch = useAppDispatch();\n  const [iscategories, setCategories] = useState([]);\n  const [isgenders, setGenders] = useState([]);\n  const [ispetTypes, setPetTypes] = useState([]);\n  const [islocations, setLocations] = useState<LocationProps[]>([]);\n\n  const [selectedLocation, setSelectedLocation] = useState<string|any|null>(null);\n  const [selectedSort, setSelectedSort] = useState<string | null>(null);\n  const [selectCategories, setSelectCategories] = useState('');\n  const [selectGenders, setSelectGenders] = useState('');\n  const [selectPetTypes, setSelectPetTypes] = useState('');\n\n  const [hasInput, setHasInput] = useState(false);\n\n  const getFilter = (page: number, limit: number) => {\n    return {\n      category: selectCategories,\n      gender: selectGenders,\n      species: selectPetTypes,\n      location: selectedLocation !== null ? selectedLocation : undefined,\n      price: selectedSort === 'highprice' ? false : (selectedSort === 'lowprice' ? true : undefined),\n      popularity: selectedSort === 'popularity' ? false : (selectedSort === 'unpopularity' ? true : undefined),\n      page,  \n      limit, \n      name: ''\n    };\n  };\n\n  const handleCategoriesChange = (e:React.ChangeEvent<HTMLSelectElement>, setFieldValue) => {\n    const value = e.target.value;\n    setFieldValue('category', value);\n    setSelectCategories(value);\n    setHasInput(e.target.value.trim().length > 0);\n    dispatch(getNoticesFilter({ ...getFilter(1, 6), category: value }));\n  };\n\n  const handleGendersChange = (e:React.ChangeEvent<HTMLSelectElement>, setFieldValue) => {\n    const value = e.target.value;\n    setFieldValue('gender', value);\n    setSelectGenders(value);\n    setHasInput(e.target.value.trim().length > 0);\n    dispatch(getNoticesFilter({ ...getFilter(1, 6), gender: value }));\n  };\n\n  const handleTypesChange = (e:React.ChangeEvent<HTMLSelectElement>, setFieldValue) => {\n    const value = e.target.value;\n    setFieldValue('byTypes', value);\n    setSelectPetTypes(value);\n    setHasInput(e.target.value.trim().length > 0);\n    dispatch(getNoticesFilter({ ...getFilter(1, 6), species: value }));\n  };\n\n  const handleSortByPopularity = () => {\n    setSelectedSort('popularity');\n    setHasInput(true);\n    dispatch(getNoticesFilter({ ...getFilter(1, 6), popularity: false }));\n  };\n\n  const handleSortByUnpopularity = () => {\n    setSelectedSort('unpopularity');\n    setHasInput(true);\n    dispatch(getNoticesFilter({ ...getFilter(1, 6), popularity: true }));\n  };\n\n  const handleSortByExpensive = () => {\n    setSelectedSort('highprice');\n    setHasInput(true);\n    dispatch(getNoticesFilter({ ...getFilter(1, 6), price: false }));\n  };\n\n  const handleSortByCheap = () => {\n    setSelectedSort('lowprice');\n    setHasInput(true);\n    dispatch(getNoticesFilter({ ...getFilter(1, 6), price: true }));\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const categoriesResponse = await axios.get('/notices/categories');\n      const gendersResponse = await axios.get('/notices/sex');\n      const petTypesResponse = await axios.get('/notices/species');\n      const locationsResponse = await axios.get('/cities');\n\n      setCategories(categoriesResponse.data);\n      setGenders(gendersResponse.data);\n      setPetTypes(petTypesResponse.data);\n      setLocations(locationsResponse.data);\n    };\n\n    fetchData();\n  }, []);\n\n  const locationOptions:OptionType[] = islocations.map(location => ({\n    value: location._id,\n    label: `${location.stateEn}, ${location.cityEn}, ${location.countyEn}`\n  }));\n\n  const customStyles = {\n    control: (provided, state) => ({\n      ...provided,\n      borderRadius: '30px',\n      border: 'none',\n      height: '42px',\n      padding: '0 12px',\n      fontFamily: 'Manrope',\n      fontSize: '14px',\n      fontWeight: '500',\n      lineHeight: '1.29',\n      letterSpacing: '-0.03em',\n      color: '#262626',\n      boxShadow: state.isFocused ? '0 0 0 1px #F6B83D' : provided.boxShadow,\n      '&:hover': {\n        border: '1px solid #F6B83D',\n      },\n    }),\n    option: (provided, state) => ({\n      ...provided,\n      borderRadius: '15px',\n      border: 'none',\n      padding: '0 12px',\n      fontFamily: 'Manrope',\n      fontSize: '14px',\n      fontWeight: '500',\n      lineHeight: '1.29',\n      letterSpacing: '-0.03em',\n      color: state.isSelected ? '#fff' : '#26262699',\n      backgroundColor: state.isSelected ? '#262626' : '#fff',\n      '&:hover': {\n        color: '#262626',\n      },\n    }),\n    placeholder: (provided) => ({\n      ...provided,\n      color: '#262626',\n    }),\n    singleValue: (provided) => ({\n      ...provided,\n      color: '#262626',\n    }),\n    dropdownIndicator: (provided) => ({\n      ...provided,\n      display: 'none',\n    }),\n    indicatorSeparator: (provided) => ({\n      ...provided,\n      display: 'none',\n    }),\n  };\n\n  const formatOptionLabel = ({ label }, { inputValue }) => {\n    if (!inputValue) return label;\n\n    const highlightedText = label.substring(0, inputValue.length);\n    const restOfText = label.substring(inputValue.length);\n\n    return (\n      <>\n        <span style={{ color: '#262626' }}>{highlightedText}</span>\n        <span style={{ color: '#26262666' }}>{restOfText}</span>\n      </>\n    );\n  };\n\n  const handleResetClick = (resetForm) => {\n    resetForm();\n    setSelectedLocation(null);\n    setSelectedSort(null);\n    setSelectCategories('');\n    setSelectGenders('');\n    setSelectPetTypes('');\n    setHasInput(false);\n    dispatch(getNoticesFilter({\n      page: 1,\n      limit: 6,\n      name: '',\n      category: '',\n      gender: '',\n      species: '',\n      location: '',\n      popularity: false,\n      price: false\n    }));\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        search: '',\n        category: '',\n        gender: '',\n        petType: '',\n        location: '',\n        sortBy: '',\n      }}\n      onSubmit={(values, actions) => {\n        \n        const getFilterValues = () => ({\n          search: values.search,\n          category: values.category,\n          gender: values.gender,\n          petType: values.petType,\n          location: values.location,\n          sortBy: values.sortBy,\n          page: 1,\n          limit: 6,\n          name: values.search || '',\n          species: values.petType || '',\n        });\n\n        dispatch(getNoticesFilter(getFilterValues()));\n      }}\n    >\n      {({ resetForm, setFieldValue, values }) => (\n        <Form>\n          <Container>\n            <ContainerTabletSelect>\n              <SearchField fetch={getNoticesFilter}\n              //  setFieldValue={(value) => setFieldValue('search', value)}\n                />\n              <ContainerSelect>\n                <CustomSelect\n                  as=\"select\"\n                  id=\"category\"\n                  name=\"category\"\n                  value={selectCategories}\n                  onChange={(e:React.ChangeEvent<HTMLSelectElement>) => handleCategoriesChange(e, setFieldValue)}\n                >\n                  <Option value=\"\">Category</Option>\n                  {iscategories.map(category => (\n                    <Option key={nanoid()} value={category}>\n                      {category}\n                    </Option>\n                  ))}\n                </CustomSelect>\n                <CustomSelect\n                  as=\"select\"\n                  name=\"gender\"\n                  value={selectGenders}\n                  onChange={(e:React.ChangeEvent<HTMLSelectElement>) => handleGendersChange(e, setFieldValue)}\n                >\n                  <Option value=\"\">By gender</Option>\n                  {isgenders.map((gender) => (\n                    <Option key={nanoid()} value={gender}>\n                      {gender}\n                    </Option>\n                  ))}\n                </CustomSelect>\n              </ContainerSelect>\n              <CustomSelectType\n                as=\"select\"\n                name=\"byTypes\"\n                value={selectPetTypes}\n                onChange={(e:React.ChangeEvent<HTMLSelectElement>) => handleTypesChange(e, setFieldValue)}\n              >\n                <Option value=\"\">By type</Option>\n                {ispetTypes.map((byType) => (\n                  <option key={nanoid()} value={byType}>\n                    {byType}\n                  </option>\n                ))}\n              </CustomSelectType>\n              <ContainerSvg>\n                <Select\n                  name=\"location\"\n                  defaultValue={locationOptions}\n                  value={selectedLocation}\n                  placeholder=\"Location\"\n                  styles={customStyles}\n                  formatOptionLabel={formatOptionLabel}\n                  options={locationOptions}\n                  onChange={(option:SingleValue<{ label: any, value: string }> | null) => {\n                      if (option) {\n                        setHasInput(true);\n                        setSelectedLocation(option);\n                        setFieldValue('location', option.value);\n                        dispatch(getNoticesFilter({ ...getFilter(1, 6), location: option.value }));\n                      \n                    };\n                    // setSelectedLocation(option);\n                    // setHasInput(true);\n                    // setFieldValue('location', option.value);\n                    // dispatch(getNoticesFilter({ ...getFilter(1, 6), location: option.value }));\n                  }}\n                />\n                <button type='submit'>\n                  <Svg>\n                    <use xlinkHref={sprite + '#icon-search'} />\n                  </Svg>\n                </button>\n\n                {selectedLocation && <SvgReset onClick={() => handleResetClick(resetForm)}>\n                  <use xlinkHref={sprite + '#icon-x'} />\n                </SvgReset>}\n              </ContainerSvg>\n            </ContainerTabletSelect>\n\n            <Straight></Straight>\n\n            <RadioGroup role=\"group\" aria-labelledby=\"sort-group\">\n              <RadioButton\n                type=\"radio\"\n                name=\"sort\"\n                value=\"popularity\"\n                id=\"popularity\"\n                onChange={handleSortByPopularity}\n                checked={selectedSort === 'popularity'}\n              />\n              <RadioButtonLabel htmlFor=\"popularity\">\n                Popular\n                {selectedSort === 'popularity' && (\n                  <Reset onClick={() => handleResetClick(resetForm)}>\n                    <use xlinkHref={sprite + '#icon-x-1'} />\n                  </Reset>\n                )}\n              </RadioButtonLabel>\n\n              <RadioButton\n                type=\"radio\"\n                name=\"sort\"\n                value=\"unpopularity\"\n                id=\"unpopularity\"\n                onChange={handleSortByUnpopularity}\n                checked={selectedSort === 'unpopularity'}\n              />\n              <RadioButtonLabel htmlFor=\"unpopularity\">\n                Unpopular\n                {selectedSort === 'unpopularity' && (\n                  <Reset onClick={() => handleResetClick(resetForm)}>\n                    <use xlinkHref={sprite + '#icon-x-1'} />\n                  </Reset>\n                )}\n              </RadioButtonLabel>\n\n              <RadioButton\n                type=\"radio\"\n                name=\"sort\"\n                value=\"lowprice\"\n                id=\"lowprice\"\n                onChange={handleSortByCheap}\n                checked={selectedSort === 'lowprice'}\n              />\n              <RadioButtonLabel htmlFor=\"lowprice\">\n                Cheap\n                {selectedSort === 'lowprice' && (\n                  <Reset onClick={() => handleResetClick(resetForm)}>\n                    <use xlinkHref={sprite + '#icon-x-1'} />\n                  </Reset>\n                )}\n              </RadioButtonLabel>\n\n              <RadioButton\n                type=\"radio\"\n                name=\"sort\"\n                value=\"highprice\"\n                id=\"highprice\"\n                onChange={handleSortByExpensive}\n                checked={selectedSort === 'highprice'}\n              />\n              <RadioButtonLabel htmlFor=\"highprice\">\n                Expensive\n                {selectedSort === 'highprice' && (\n                  <Reset onClick={() => handleResetClick(resetForm)}>\n                    <use xlinkHref={sprite + '#icon-x-1'} />\n                  </Reset>\n                )}\n              </RadioButtonLabel>\n            </RadioGroup>\n          </Container>\n          {hasInput ? (<Button type='button' onClick={() => handleResetClick(resetForm)}>Reset</Button>) : null}\n        </Form>\n      )}\n    </Formik>\n  );\n};","import { Title } from \"../../components/Title/Title\";\nimport { Pagination } from \"../../components/Pagination/Pagination\";\nimport {fetchnotices} from '../../redux/operations';\nimport {NoticesList} from '../../components/NoticesList/NoticesList';\nimport { useEffect, useState} from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {selectorNotices} from '../../redux/selects';\nimport {NoticesFilters} from '../../components/NoticesFilters/NoticesFilters';\nimport { AppDispatch } from \"../../redux/store\";\nimport React from \"react\";\n\ninterface NoticeProps{\n  imgURL:string,\n  title:string, \n  popularity:string, \n  comment:string, \n  name:string, \n  birthday:string, \n  species:string, \n  category:string, \n  sex:string, \n  _id:string\n}\n\n\nconst useAppDispatch:()=>AppDispatch=useDispatch;\n\nexport default function Notices(){\n    const dispatch=useAppDispatch();\n    const [isPageNumber, setIsPageNumber] = useState(1);\n    const notices: NoticeProps[]  = useSelector(selectorNotices) || [];\n\n    const handleChangeNewPage=(number:number)=>{\n        setIsPageNumber(number);\n    }\n\n    useEffect(()=>{\n      dispatch(fetchnotices(isPageNumber))\n    }, [dispatch, isPageNumber])\n    return(\n        <>\n          <Title name=\"Find your favorite pet\"/>\n          <NoticesFilters notices={notices}/>\n          <NoticesList notices={notices}  trash={false}/>\n          <Pagination handleChangeNewPage={handleChangeNewPage} currentPage={isPageNumber}/>\n        </>\n    )\n}","import styled from \"styled-components\";\n\ninterface ButtonSvgProps{\n    $isDefaultFavorite?:boolean\n}\n\nexport const ContainerItem = styled.li`\npadding: 20px;\n\n@media (min-width: 768px) {\n    width: 100%; \n    margin: 0 auto; \n}\n`\nexport const Img = styled.img`\nborder-radius: 16px;\nmargin-bottom: 20px;\n`\n\nexport const Title = styled.h3`\nfont-family: Manrope;\nfont-size: 16px;\nfont-weight: 700;\nline-height: 1,25;\ncolor: #2B2B2A;\n`\n\nexport const Rating = styled.p`\nfont-family: Manrope;\nfont-size: 14px;\nfont-weight: 500;\nline-height: 1,29;\n`\n\nexport const ContainerList= styled.ul`\ndisplay: flex;\njustify-content: space-between;\nlist-style: none;\nmargin-bottom: 14px;\n`\n\nexport const ContainerTitle= styled.div`\ndisplay: flex;\njustify-content: space-between;\nmargin-bottom: 5px;\n`\n\nexport const ContainerPopulate= styled.div`\ndisplay: flex;\ngap:2px;\njustify-content: center;\nalign-items: center;\n`\n\nexport const TitleTable= styled.p`\nfont-family: Manrope;\nfont-size: 10px;\nfont-weight: 500;\nline-height: 1,4;\nletter-spacing: -0.02em;\ncolor: #26262680;\n`\n\nexport const TextTable= styled.p`\nfont-family: Manrope;\nfont-size: 12px;\nfont-weight: 500;\nline-height: 1,4;\nletter-spacing: -0.02em;\ncolor: #262626;\n`\n\nexport const Comment= styled.p`\nmargin-bottom: 16px;\nfont-family: Manrope;\nfont-size: 14px;\nfont-weight: 500;\nline-height: 1,29;\nletter-spacing: -0.02em;\n\ncolor: #2B2B2A;\n`\n\nexport const ContainerButton= styled.div`\ndisplay: flex;\njustify-content: space-between;\n`\n\nexport const Button = styled.button`\nwidth: 231px;\nheight: 46px;\n\nborder-radius: 30px ;\nbackground: #F6B83D;\n\nbackground: ${p => p.theme.colors.yellow};\n\nfont-family: Manrope;\nfont-size: 14px;\nfont-weight: 500;\nline-height: 1,29px;\nletter-spacing: -0.03em;\ntext-align: center;\ncolor: ${p=>p.theme.colors.white};\ncursor: pointer;\n`\n\nexport const ButtonSVG = styled.button<ButtonSvgProps>`\nwidth: 46ppx;\nheight: 46px;\npadding: 14px;\ngap: 10px;\nborder-radius: 30px;\nbackground-color: #FFF4DF;\n\nbackground-color: ${(props) => (props.$isDefaultFavorite ? '#FBE7C1' : '#FFF4DF')};\ncursor: pointer;\n\n&:hover{\n    background-color: #FBE7C1;\n}\n\n`\n\n\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\nposition: relative;\npadding-top: 40px;\n`\n\nexport const SvgButton = styled.div`\ndisplay: block;\nposition:absolute;\nright: 0; top: 0;\nborder: none;\nmargin-left: auto;\ncursor: pointer;\n`\n\nexport const ContainerSvg = styled.div`\ndisplay: block;\nmargin: 0 auto;\nmargin-bottom: 20px;\npadding:18px;\nwidth: 80px;\nheight: 80px;\nborder-radius: 50%;\nbackground-color: #FFF4DF;\n`\n\nexport const Img = styled.img`\ndisplay: block;\nmargin: auto;\n`\n\nexport const Title = styled.h2`\nmargin-bottom: 20px;\nfont-family: Manrope;\nfont-size: 20px;\nfont-weight: 700;\nline-height: 1;\nletter-spacing: -0.03em;\ntext-align: center;\ncolor: ${p => p.theme.colors.yellow};\n`\n\nexport const Text = styled.p`\nmargin-bottom: 20px;\nfont-family: Manrope;\nfont-size: 14px;\nfont-weight: 500;\nline-height: 1,29px;\nletter-spacing: -0.02em;\ntext-align: center;\ncolor: #2B2B2A;\n`","import Modal from \"react-modal\";\nimport { useEffect } from \"react\";\nimport {Container, SvgButton, ContainerSvg, Img, Title, Text} from './ModalAttention.styled';\nimport sprite from '../../images/sprite.svg';\nimport dog_small from '../../images/dog_small.jpg';\nimport React from \"react\";\n\nimport { AuthNav } from '../AuthNav/AuthNav';\n\ninterface ModalAttentionProps{\n  isOpenModalAttention:boolean,\n  setIsOpenModalAttention:(isOpenModalAttention:boolean)=>void\n}\n\nModal.setAppElement('#modal');\n\nexport const ModalAttention:React.FC<ModalAttentionProps> = ({ isOpenModalAttention, setIsOpenModalAttention }) => {\n\n\n    const customStyles = {\n      overlay: {\n        backgroundColor: \"rgba(38, 38, 38, 0.3)\",\n      },\n      content: {\n        top: \"50%\",\n        left: \"50%\",\n        right: \"auto\",\n        bottom: \"auto\",\n        marginRight: \"-50%\",\n        transform: \"translate(-50%, -50%)\",\n        padding: \"20px\",\n        maxWidth: \"335px\",\n        maxHeight: \"394px\",\n        borderRadius: \"30px\",\n        backgroundColor: \"#FFFFFF\",\n      },\n    };\n  \n    useEffect(() => {\n      if (isOpenModalAttention) {\n        document.body.classList.add('no-scroll');\n      } else {\n        document.body.classList.remove('no-scroll');\n      }\n  \n      return () => {\n        document.body.classList.remove('no-scroll');\n      };\n    }, [isOpenModalAttention]);\n    \n      return (\n        <>\n        <Modal   \n          isOpen={isOpenModalAttention}\n          onRequestClose={() => {\n            setIsOpenModalAttention(false);\n          }}\n               \n          style={customStyles}\n  \n          contentLabel=\"More info modal\"     \n        >\n  <Container>\n          <SvgButton\n             onClick={() => {\n                setIsOpenModalAttention(false);\n             }}>\n              <svg width= '24px' height='24px'>\n                  <use xlinkHref={sprite + '#icon-x'} />\n              </svg> \n           </SvgButton>\n\n           <ContainerSvg>\n             <Img src={dog_small} alt=\"small-dog\" width= '44px' height='44px'/>\n           </ContainerSvg>\n  \n           <Title>Attention</Title>\n  \n           <Text>We would like to remind you that certain functionality is available only to authorized users.If you have an account, please log in with your credentials.\n             If you do not already have an account, you must register to access these features.\n           </Text>\n\n           <AuthNav />\n  \n  </Container>\n  \n        </Modal>\n        </>\n      );\n    }; ","import styled from \"styled-components\";\n\nexport const Container = styled.div`\nposition: relative;\npadding-top: 40px;\n`\n\nexport const SvgButton = styled.div`\ndisplay: block;\nposition:absolute;\nright: 0; top: 0;\nborder: none;\nmargin-left: auto;\n`\nexport const ContainerImg = styled.div`\nposition: relative;\n`\n\nexport const Svg = styled.div`\nposition: absolute;\ntop: 0;\nleft: 30%;\ndisplay: block;\npadding: 8px 14px 8px 14px;\nwidth: 52px;\nheight: 34px;\nborder-radius: 30px;\nbackground-color: #FFF4DF;\n\nfont-family: Manrope;\nfont-size: 14px;\nfont-weight: 500;\nline-height: 1,29px;\nletter-spacing: -0.02em;\ntext-align: center;\n\ncolor: ${p => p.theme.colors.yellow};\n`\n\nexport const Img = styled.img`\ndisplay: block;\nmargin: auto;\nmargin-bottom: ${p => p.theme.spacing(4)};\nwidth: 120px;\nheight: 120px;\nborder-radius: 50%;\n`\n\nexport const Title = styled.h2`\nmargin-bottom: 8px;\nfont-family: Manrope;\nfont-size: 16px;\nfont-weight: 700;\nline-height: 1,25;\n\ntext-align: center;\ncolor: #2B2B2A;\n`\nexport const ContainerPopulate = styled.div`\ndisplay: flex;\njustify-content: center;\ngap: 64px;\nmargin-bottom: 8px;\n`\nexport const Rating = styled.p`\nfont-family: Manrope;\nfont-size: 14px;\nfont-weight: 500;\nline-height: 1,29;\n`\nexport const ContainerList= styled.ul`\ndisplay: flex;\njustify-content: space-between;\nlist-style: none;\nmargin-bottom: 14px;\n`\nexport const TitleTable= styled.p`\nfont-family: Manrope;\nfont-size: 10px;\nfont-weight: 500;\nline-height: 1,4;\nletter-spacing: -0.02em;\ncolor: #26262680;\n`\n\nexport const Text= styled.p`\nfont-family: Manrope;\nfont-size: 14px;\nfont-weight: 500;\nline-height: 1,29;\nletter-spacing: -0.02em;\n\ncolor: #2B2B2A;\n`\n\nexport const Comment= styled.p`\nmargin-bottom: 16px;\nfont-family: Manrope;\nfont-size: 14px;\nfont-weight: 500;\nline-height: 1,29;\nletter-spacing: -0.02em;\n\ncolor: #2B2B2A;\n`\n\nexport const ContainerButton= styled.div`\ndisplay: flex;\ngap: 8px;\njustify-content: center;\nalign-items: center;\n`\nexport const ButtonAdd= styled.button`\ndisplay: flex;\nmargin: auto;\nalign-items: center;\njustify-content: center;\ngap: 4px;\nbackground-color: ${p => p.theme.colors.yellow};\nborder-radius: 30px;\nwidth: 135px;\nheight: 44px;\n\nfont-family: Manrope;\nfont-size: 16px;\nfont-weight: 500;\nline-height: 1,25;\nletter-spacing: -0.03em;\ntext-align: center;\ncolor:${p => p.theme.colors.white};\ncursor: pointer;\n\n&:hover{\n    background-color: #F9B020;\n}\n`\n\nexport const ButtonContact= styled.a`\ndisplay: flex;\nmargin: auto;\nalign-items: center;\njustify-content: center;\nbackground-color: ${p => p.theme.colors.rose};\nborder-radius: 30px;\nwidth: 135px;\nheight: 44px;\n\nfont-family: Manrope;\nfont-size: 16px;\nfont-weight: 500;\nline-height: 1,25;\nletter-spacing: -0.03em;\ntext-align: center;\ncolor:${p => p.theme.colors.yellow};\n\n&:hover{\n    background-color: #FBE7C1;\n}\n`","import Modal from \"react-modal\";\nimport { useEffect, FC } from \"react\";\nimport {Container, SvgButton, ContainerImg, Svg, Img, Title, ContainerPopulate, Rating,ContainerList, TitleTable, Text,\n        Comment, ContainerButton, ButtonAdd, ButtonContact } from './ModalNotice.styled';\nimport sprite from '../../images/sprite.svg';\nimport {addNotices, removeNotices} from '../../redux/operations';\nimport { useDispatch } from \"react-redux\";\nimport { AppDispatch } from \"../../redux/store\";\n\n\n\nconst useAppDispatch:()=>AppDispatch=useDispatch;\n\ninterface NoticeProps{\n  imgURL:string ,\n  title:string , \n  popularity:string , \n  comment:string , \n  name:string , \n  birthday:string , \n  species:string , \n  sex:string , \n  category:string , \n  _id:string, \n  user:any \n}\n\ninterface ModalNoticeProps{\n  isOpenModalNotice:boolean, \n  setIsOpenModalNotice:(isOpenModalNotice:boolean)=>void, \n  notice:NoticeProps, \n  setFavorite:(isFavorite:boolean)=>void, \n  isFavorite:boolean\n}\n\nModal.setAppElement('#modal');\n\nexport const ModalNotice:FC<ModalNoticeProps> = ({ isOpenModalNotice, setIsOpenModalNotice, notice, setFavorite, isFavorite }) => {\n    const {imgURL ,title, popularity, comment, name, birthday, species, sex, category, _id, user}=notice;\n    const dispatch=useAppDispatch();\n\n    const customStyles = {\n      overlay: {\n        backgroundColor: \"rgba(38, 38, 38, 0.3)\",\n       \n      },\n      content: {\n        top: \"50%\",\n        left: \"50%\",\n        right: \"auto\",\n        bottom: \"auto\",\n        marginRight: \"-50%\",\n        transform: \"translate(-50%, -50%)\",\n        padding: \"20px\",\n        maxWidth: \"335px\",\n        maxHeight: \"446px\",\n        borderRadius: \"30px\",\n        backgroundColor: \"#FFFFFF\",\n      },\n    };\n\n    useEffect(() => {\n      if (isOpenModalNotice) {\n        document.body.classList.add('no-scroll');\n      } else {\n        document.body.classList.remove('no-scroll');\n      }\n  \n      return () => {\n        document.body.classList.remove('no-scroll');\n      };\n    }, [isOpenModalNotice]);\n\n    const handleAddFavorite = (_id:string) => {\n      if (!isFavorite) {\n          dispatch(addNotices(_id));\n          setFavorite(true)\n      } else {\n        dispatch(removeNotices(_id));\n        setFavorite(false)\n      }\n  };\n\n      return (\n        <>\n        <Modal   \n          isOpen={isOpenModalNotice}\n          onRequestClose={() => {\n            setIsOpenModalNotice(false);\n          }}\n               \n          style={customStyles}\n          contentLabel=\"More info modal\"     \n        >\n  <Container>\n          <SvgButton\n             onClick={() => {\n                setIsOpenModalNotice(false);\n             }}>\n              <svg width= '24px' height='24px'>\n                  <use xlinkHref={sprite + '#icon-x'} />\n              </svg> \n           </SvgButton>\n\n           <ContainerImg>\n            <Img src={imgURL} alt={title} />\n\n            <Svg>{category}</Svg>            \n           </ContainerImg>\n     \n           <Title>{title}</Title>\n\n           <ContainerPopulate>\n                 <svg width={16} height={16}>\n                    <use xlinkHref={sprite + '#icon-star'} />\n                 </svg>      \n                 <Rating>{popularity}</Rating>          \n              </ContainerPopulate>\n              <ContainerList>\n\n                 <li>\n                    <TitleTable>Name</TitleTable>\n                    <Text>{name}</Text>\n                 </li>\n                 <li>\n                    <TitleTable>Birthday</TitleTable>\n                    <Text>{birthday}</Text>\n                 </li>\n                 <li>\n                    <TitleTable>Sex</TitleTable>\n                    <Text>{sex}</Text>\n                 </li>\n                 <li>\n                    <TitleTable>Species</TitleTable>\n                    <Text>{species}</Text>\n                 </li>\n              </ContainerList>\n\n              <Comment>{comment}</Comment>\n\n              <ContainerButton>\n                <ButtonAdd type=\"button\" onClick={() => handleAddFavorite(_id)}> Add to\n                     <svg width={16} height={16}>\n                         <use xlinkHref={sprite + '#icon-heart-3'} />\n                     </svg>  \n                </ButtonAdd>\n                {user?.phone && (\n                  <ButtonContact as=\"a\" href={`tel:${user.phone}`}>Contact</ButtonContact>\n                )}\n              </ContainerButton>\n    \n  </Container>\n  \n        </Modal> \n        </>\n      );\n    }; ","import sprite from '../../images/sprite.svg';\nimport {Button,Title, Img, ContainerList, ContainerTitle, ContainerPopulate,\n        Rating, TitleTable, Comment, ContainerButton, ContainerItem, ButtonSVG\n} from './NoticeItrm.styled';\nimport {ModalAttention} from '../ModalAttention/ModalAttention';\nimport {ModalNotice} from '../ModalNotice/ModalNotice';\nimport { useState } from 'react';\nimport { useSelector,useDispatch } from 'react-redux';\nimport {selectIsLoggedIn} from '../../redux/auth/selects';\nimport {selectorFavorite, selectorNoticesId} from '../../redux/selects';\nimport {addNotices, removeNotices, fetchNoticesId, fetchUserFull} from '../../redux/operations';\nimport { AppDispatch } from '../../redux/store';\n\nconst useAppDispatch:()=>AppDispatch=useDispatch;\n\n \nexport const NoticesItem=({notice, trash})=>{\n\n    const dispatch=useAppDispatch();\n\n    const isLoggedIn = useSelector(selectIsLoggedIn);\n    \n    const favorites = useSelector(selectorFavorite);\n    const noticeId=useSelector(selectorNoticesId);\n   \n    const {imgURL ,title, popularity, comment, name, birthday, species, category, sex, _id}=notice;\n    const [isOpenModalAttention, setIsOpenModalAttention ] =useState(false);\n    const [isOpenModalNotice, setIsOpenModalNotice ] =useState(false);\n    const [isFavorite, setFavorite]=useState(favorites.includes(_id));\n\n    const openModalAttention=()=>{\n        setIsOpenModalAttention(true);\n    }\n\n    const openModalNotice=()=>{\n        setIsOpenModalNotice(true);\n    }\n\n    const handleAction = (_id:string) => {\n        if (isLoggedIn) {\n            openModalNotice();\n            dispatch(fetchNoticesId(_id))\n        } else {\n            openModalAttention();\n        }\n    }\n\n    const handleToggetFavorite = (_id:string) => {\n        if (!isFavorite) {\n            dispatch(addNotices(_id)); \n            setFavorite(true)\n           console.log( favorites)\n        } else\n     {      dispatch(removeNotices(_id));\n            setFavorite(false)\n            console.log( favorites)}\n    };\n\n    const handleActionFavorite = (_id:string) => {\n        if (isLoggedIn) {\n            handleToggetFavorite(_id);\n        } else {\n            openModalAttention();\n        }\n    };\n\n    const handleDeleteFavorite = async (_id:string) => {\n        try {\n            await dispatch(removeNotices(_id));\n            setFavorite(false);\n            await dispatch(fetchUserFull());\n        } catch (error) {\n            console.error(\"Error deleting favorite notice:\", error);\n        }\n    };\n\n    return(\n        <ContainerItem>\n            <Img src= {imgURL} alt={title}/>\n           <ContainerTitle>\n              <Title>{title}</Title>\n              <ContainerPopulate>\n                 <svg width={16} height={16}>\n                    <use xlinkHref={sprite + '#icon-star'} />\n                 </svg>      \n                 <Rating>{popularity}</Rating>          \n              </ContainerPopulate>\n            </ContainerTitle>  \n\n            <ContainerList>\n\n                <li>\n                    <TitleTable>Name</TitleTable>\n                    <p>{name}</p>\n                </li>\n                <li>\n                    <TitleTable>Birthday</TitleTable>\n                    <p>{birthday}</p>\n                </li>\n                <li>\n                    <TitleTable>Sex</TitleTable>\n                    <p>{sex}</p>\n                </li>\n                <li>\n                    <TitleTable>Species</TitleTable>\n                    <p>{species}</p>\n                </li>\n                <li>\n                    <TitleTable>Category</TitleTable>\n                    <p>{category}</p>\n                </li>\n                 \n            </ContainerList>\n            \n           <Comment>{comment}</Comment>\n           <ContainerButton>\n            \n               <Button type='button' onClick={()=>handleAction(_id)}>Learn more</Button>\n               {trash&&\n               <ButtonSVG onClick={() => handleDeleteFavorite(_id)}>\n                   <svg width={18} height={18}>\n                      <use xlinkHref={sprite + '#icon-trash-2'} />\n                   </svg>                \n               </ButtonSVG>}\n\n               {!trash&&<ButtonSVG $isDefaultFavorite={isFavorite} onClick={() => handleActionFavorite(_id)}>\n                   <svg width={18} height={18}>\n                      <use xlinkHref={sprite + '#icon-heart'} />\n                   </svg>                \n               </ButtonSVG>}\n               \n           </ContainerButton>\n\n           <ModalAttention isOpenModalAttention={isOpenModalAttention} setIsOpenModalAttention={setIsOpenModalAttention}/>\n           <ModalNotice notice={noticeId}  \n           setFavorite={setFavorite} isFavorite={isFavorite} \n           isOpenModalNotice={isOpenModalNotice} setIsOpenModalNotice={setIsOpenModalNotice}/>\n        \n        </ContainerItem>\n    )\n}","import styled from \"styled-components\";\n\n\nexport const Container = styled.ul`\n\nlist-style: none;\n\ndisplay: grid;\n    grid-template-columns: 1fr;\n    gap: 16px;\n\n    @media (min-width: 768px) and (max-width: 1279px) {\n        grid-template-columns: 1fr 1fr; \n    }\n\n    @media (min-width: 1280px) {\n        grid-template-columns: 1fr 1fr 1fr; \n    }\n`\n\n","import {NoticesItem} from '../NoticesItem/NoticesItem';\nimport {Container} from './NoticeList.styled';\nimport React from 'react';\n\ninterface NoticeProps{\n    imgURL:string,\n    title:string, \n    popularity:string, \n    comment:string, \n    name:string, \n    birthday:string, \n    species:string, \n    category:string, \n    sex:string, \n    _id:string\n}\n\ninterface NotticeListProps{\n    notices:NoticeProps[],\n    trash:boolean\n}\n\nexport const NoticesList:React.FC<NotticeListProps>=({notices, trash=false})=>{\n\n    return (\n        <Container>\n            {notices?.map(iterm=>( \n            <NoticesItem key={iterm._id} notice={iterm} trash={trash}/>\n        ))}\n        \n        </Container>\n    )\n}","import styled from \"styled-components\";\nimport { IoIosArrowBack, IoIosArrowForward } from 'react-icons/io';\nimport { RiArrowLeftDoubleFill, RiArrowRightDoubleFill } from 'react-icons/ri';\n\nexport const Container = styled.div`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\ngap: 6px;\n`\n\nexport const Button = styled.button`\ndisplay: block;\nwidth: 40px;\nheight: 40px;\nborder-radius: 50%;\ncursor: pointer;\nfill: currentColor;\nborder: 1px solid #2626260D;\ntext-align: center;\n\nfont-family: Manrope;\nfont-size: 14px;\nfont-weight: 700;\nline-height: 1,29;\ncolor: #262626;\n\n&:hover{\n    background-color: ${p => p.theme.colors.yellow};\n    color:   ${p => p.theme.colors.white};\n\n}\n`\nexport const ButtonNext = styled.button`\ndisplay: block;\nwidth: 40px;\nheight: 40px;\nborder-radius: 50%;\ncursor: pointer;\nborder: 1px solid #2626260D;\ntext-align: center;\nfont-size: 20px;\n\n&:hover{\n    color:  #262626;\n    border: 1px solid #26262633;\n}\n`\n\nexport const StyledRiArrowLeftDoubleFill = styled(RiArrowLeftDoubleFill)`\n  color: #26262680;\n  font-size: 20px;\n\n  &:hover {\n    color: #262626;\n  }\n`;\n\nexport const StyledIoIosArrowBack = styled(IoIosArrowBack)`\n  color: #26262680;\n  font-size: 20px;\n\n  &:hover {\n    color: #262626;\n  }\n`;\n\nexport const StyledIoIosArrowForward = styled(IoIosArrowForward)`\n  color: #26262680;\n  font-size: 20px;\n\n  &:hover {\n    color: #262626;\n  }\n`;\n\nexport const StyledArrowRightDoubleFill = styled(RiArrowRightDoubleFill)`\n  color: #26262680;\n  font-size: 20px;\n\n  &:hover {\n    color: #262626;\n  }\n`;","import { useSelector } from 'react-redux';\nimport { useMediaQuery } from 'react-responsive';\nimport {selectorTotalPages} from '../../redux/selects';\nimport {Container, Button, ButtonNext, StyledRiArrowLeftDoubleFill, \n        StyledIoIosArrowBack, StyledIoIosArrowForward, StyledArrowRightDoubleFill } from './Pagination.styled';\n\n\nexport const Pagination=({handleChangeNewPage, currentPage})=>{\n  const totalPages=useSelector(selectorTotalPages);\n\n  const isMobile = useMediaQuery({ query: '(max-width: 767px)' });\n\n  const visiblePages = isMobile ? 2 : 3;\n\n  const generatePageNumbers = () => {\n  \n    let startPage = Math.max(1, currentPage - Math.floor(visiblePages / 2));\n    let endPage = Math.min(totalPages, startPage + visiblePages - 1);\n\n    if (endPage - startPage < visiblePages - 1) {\n        startPage = Math.max(1, endPage - visiblePages + 1);\n    }\n\n    const pages: number[]  = [];\n    for (let i = startPage; i <= endPage; i++) {\n        pages.push(i);\n    }\n    return pages;\n}\n\nconst pages = generatePageNumbers();\n\n    return(\n<>\n     {totalPages > 1 && (\n        <Container>\n        \n            <ButtonNext onClick={()=>handleChangeNewPage(1)} \n                        disabled={currentPage === 1}\n                        type='button'>  \n                        <StyledRiArrowLeftDoubleFill /> \n           </ButtonNext>\n\n           <ButtonNext onClick={()=>handleChangeNewPage(currentPage-1)}\n                       disabled={currentPage === 1}\n                       type='button'> \n                       <StyledIoIosArrowBack/> \n           </ButtonNext>  \n\n           {pages[0] > 1 && <Button>...</Button>}\n            \n            {pages.map((page) => (\n                <Button \n                    key={page} \n                    type='button' \n                    onClick={() => handleChangeNewPage(page)}\n                >\n                    {page}\n                </Button>\n            ))}\n\n            {pages[pages.length - 1] < totalPages && <Button>...</Button>}\n          \n           <ButtonNext onClick={()=>handleChangeNewPage(currentPage+1)}\n                       disabled={currentPage === totalPages}\n                       type='button'>\n                       <StyledIoIosArrowForward/> \n           </ButtonNext>\n\n           <ButtonNext onClick={()=>handleChangeNewPage(totalPages)} \n                       disabled={currentPage === totalPages}\n                       type='button'>\n                       <StyledArrowRightDoubleFill/>\n           </ButtonNext> \n\n        </Container>\n       )}\n</>\n    )\n}","import styled from 'styled-components';\n\nexport const Container = styled.div`\nposition: relative;\n@media (min-width: 768px) {\n    width: 230px;\n  }\n`\nexport const Input = styled.input`\nmargin-bottom: ${p=>p.theme.spacing(3)};\npadding-left : ${p=>p.theme.spacing(3)};\nwidth: 100%;\nheight: 42px;\n\nfont-family: Manrope;\nfont-size: 16px;\nfont-weight: 500;\nline-height: 1,25;\nletter-spacing: -0.03em;\ntext-align: left;\n\nborder-radius: 30px;\nborder: 1px solid #26262626;\n\n&::placeholder {\nfont-size: 14px;\nfont-weight: 500;\nline-height: 1,29;\ncolor: rgba(38, 38, 38, 0.5);\n  }\n\n  &:hover {\n    border: 1px solid ${p=>p.theme.colors.yellow}\n  }\n\n  @media (min-width: 768px) {\n    width: 230px;\n    height: 48px;\n  }\n\n  @media (min-width: 1280px) {\n   margin-bottom:0;\n  }\n`\n\nexport const Svg = styled.svg`\nposition: absolute;\ntop: 25%;\nright: 10px;\n\nwidth: 18px;\nheight: 18px;\ncursor: pointer;\nfill: currentColor;\n`\n\nexport const SvgReset = styled.svg`\nposition: absolute;\ntop: 25%;\nright: 40px;\n\nwidth: 18px;\nheight: 18px;\ncursor: pointer;\nfill: currentColor;\n`","import React, { FormEvent, useState } from 'react';\nimport sprite from '../../images/sprite.svg';\nimport { Container, Input, Svg, SvgReset } from './SearchField.styled';\nimport { useDispatch } from 'react-redux';\nimport { AppDispatch } from '../../redux/store'; \n\n// interface SearchFieldProps {\n//   fetch: (params: { keyword: string, pageNumber: number }) => Promise<any>;  \n// }\n\nexport const SearchField = ({ fetch }) => {\n  const dispatch = useDispatch<AppDispatch>(); \n  const [searchValue, setSearchValue] = useState('');\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchValue(e.target.value);\n  };\n\n  const handleResetClick = () => {\n    setSearchValue('');\n  };\n\n  const handleSubmit = (evt: FormEvent) => {\n    evt.preventDefault();\n    if (searchValue.trim()) {\n      dispatch(fetch({ keyword: searchValue, pageNumber: 1 }));  \n    }\n    handleResetClick();\n  };\n\n  return (\n    <Container onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search\"\n        name=\"name\"\n        type=\"text\"\n        value={searchValue}\n        onChange={handleInputChange}\n      />\n\n      <button type=\"submit\">\n        <Svg>\n          <use xlinkHref={sprite + '#icon-search'} />\n        </Svg>\n      </button>\n\n      {searchValue && (\n        <SvgReset onClick={handleResetClick}>\n          <use xlinkHref={sprite + '#icon-x'} />\n        </SvgReset>\n      )}\n    </Container>\n  );\n};","import styled from 'styled-components';\n\nexport const TitleLogin = styled.h1`\nmargin-bottom : ${p=>p.theme.spacing(2)};\nfont-family: Manrope;\nfont-size: 28px;\nfont-weight: 700;\nline-height: 1;\nletter-spacing: -0.04em;\ntext-align: left;\ncolor: #262626;\n\n@media (min-width: 768px) {\nfont-size: 54px;\n}\n`","import {TitleLogin} from './title.styled';\n\nexport const Title =({name})=>{\n    return(\n        <TitleLogin>{name}</TitleLogin>\n    )\n}","import { RootState } from \"../redux/store\";\n\n\n  \n  export const selectorNews=(state:RootState)=>state.news.news;\n  export const selectorTotalPages=(state:RootState)=>state.news.totalPages;\n  export const selectorTotPages=(state:RootState)=>state.notices.totalPages;\n  export const selectorNotices=(state:RootState)=>state.notices.notices;\n  export const selectorNoticesId=(state:RootState)=>state.notices.noticeId;\n  export const selectorFavorite=(state:RootState)=>state.notices.isFavorite;\n  export const selectorFriends=(state:RootState)=>state.friends.friends;\n  export const selectorPets=(state:RootState)=>state.user.pets;\n  export const selectorUserFull=(state:RootState)=>state.user.userFull;"],"names":["Container","styled","div","p","theme","spacing","ContainerTabletSelect","ContainerSelect","CustomSelect","Field","colors","yellow","CustomSelectType","Option","option","ContainerSvg","Svg","svg","SvgReset","Reset","Straight","RadioGroup","RadioButtonLabel","label","white","RadioButton","Button","button","useAppDispatch","useDispatch","axios","defaults","baseURL","NoticesFilters","_ref","notices","dispatch","iscategories","setCategories","useState","isgenders","setGenders","ispetTypes","setPetTypes","islocations","setLocations","selectedLocation","setSelectedLocation","selectedSort","setSelectedSort","selectCategories","setSelectCategories","selectGenders","setSelectGenders","selectPetTypes","setSelectPetTypes","hasInput","setHasInput","getFilter","page","limit","category","gender","species","location","undefined","price","popularity","name","handleSortByPopularity","getNoticesFilter","handleSortByUnpopularity","handleSortByExpensive","handleSortByCheap","useEffect","async","categoriesResponse","get","gendersResponse","petTypesResponse","locationsResponse","data","fetchData","locationOptions","map","value","_id","stateEn","cityEn","countyEn","customStyles","control","provided","state","borderRadius","border","height","padding","fontFamily","fontSize","fontWeight","lineHeight","letterSpacing","color","boxShadow","isFocused","isSelected","backgroundColor","placeholder","singleValue","dropdownIndicator","display","indicatorSeparator","formatOptionLabel","_ref2","_ref3","inputValue","highlightedText","substring","length","restOfText","_jsxs","_Fragment","children","_jsx","style","handleResetClick","resetForm","Formik","initialValues","search","petType","sortBy","onSubmit","values","actions","_ref4","setFieldValue","Form","SearchField","fetch","as","id","onChange","e","handleCategoriesChange","target","trim","nanoid","handleGendersChange","handleTypesChange","byType","Select","defaultValue","styles","options","type","xlinkHref","sprite","onClick","role","checked","htmlFor","Notices","isPageNumber","setIsPageNumber","useSelector","selectorNotices","fetchnotices","Title","NoticesList","trash","Pagination","handleChangeNewPage","number","currentPage","ContainerItem","li","Img","img","h3","Rating","ContainerList","ul","ContainerTitle","ContainerPopulate","TitleTable","Comment","ContainerButton","ButtonSVG","props","$isDefaultFavorite","SvgButton","h2","Text","Modal","ModalAttention","isOpenModalAttention","setIsOpenModalAttention","document","body","classList","add","remove","isOpen","onRequestClose","overlay","content","top","left","right","bottom","marginRight","transform","maxWidth","maxHeight","contentLabel","width","src","alt","AuthNav","ContainerImg","ButtonAdd","ButtonContact","a","rose","ModalNotice","isOpenModalNotice","setIsOpenModalNotice","notice","setFavorite","isFavorite","imgURL","title","comment","birthday","sex","user","removeNotices","addNotices","handleAddFavorite","phone","href","NoticesItem","isLoggedIn","selectIsLoggedIn","favorites","selectorFavorite","noticeId","selectorNoticesId","includes","openModalAttention","handleAction","fetchNoticesId","handleActionFavorite","console","log","handleToggetFavorite","fetchUserFull","error","handleDeleteFavorite","iterm","ButtonNext","StyledRiArrowLeftDoubleFill","RiArrowLeftDoubleFill","StyledIoIosArrowBack","IoIosArrowBack","StyledIoIosArrowForward","IoIosArrowForward","StyledArrowRightDoubleFill","RiArrowRightDoubleFill","totalPages","selectorTotalPages","visiblePages","useMediaQuery","query","pages","generatePageNumbers","startPage","Math","max","floor","endPage","min","i","push","disabled","Input","input","searchValue","setSearchValue","evt","preventDefault","keyword","pageNumber","TitleLogin","h1","selectorNews","news","selectorFriends","friends","selectorUserFull","userFull"],"sourceRoot":""}