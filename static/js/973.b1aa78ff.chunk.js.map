{"version":3,"file":"static/js/973.b1aa78ff.chunk.js","mappings":"kMAEO,MAAMA,EAAYC,EAAAA,GAAOC,GAAI;;;EAKvBC,EAAkBF,EAAAA,GAAOC,GAAI;;;;EAM7BE,EAAaH,EAAAA,GAAOI,MAAO;;;;;;;;cAQ1BC,GAAGA,EAAEC,MAAMC,OAAOC;;;;;;;SAOvBH,GAAGA,EAAEC,MAAMC,OAAOE;;;;EAMdC,EAAMV,EAAAA,GAAOW,GAAI;;;;;;;EASjBC,EAAeZ,EAAAA,GAAOC,GAAI;;;;;;;;;;EAY1BY,EAAUb,EAAAA,GAAOW,GAAI;;;;;gEC/C3B,MAAMZ,EAAYC,EAAAA,GAAOC,GAAI;;;;;;;;;EAWvBa,EAAYd,EAAAA,GAAOC,GAAI;;;;;;;EASvBc,EAAQf,EAAAA,GAAOgB,EAAG;iBACdX,GAAGA,EAAEC,MAAMW,QAAQ;;;;;;;EASvBC,EAAalB,EAAAA,GAAOmB,GAAI;;;;;;;;;;;EAcxBC,EAAiBpB,EAAAA,GAAOC,GAAI;;;;EAM5BoB,EAAerB,EAAAA,GAAOC,GAAI;;;;;EAO1BqB,EAAQtB,EAAAA,GAAOuB,KAAkB;;;;;;;;;sBASxBC,IAAA,IAAC,SAAEC,EAAQ,WAAEC,GAAYF,EAAA,OAC3CC,EAAW,MAAQC,EAAa,QAAU,SAAS;;;;;;;wBAO/BrB,GAAKA,EAAEC,MAAMC,OAAOC;;EAK/BmB,EAAa3B,EAAAA,GAAOI,MAAO;;;;;;;;;;;;;;;;EAiB3BwB,EAAiB5B,EAAAA,GAAO6B,IAAK;;;;;;;EAS7BC,EAAiB9B,EAAAA,GAAOK,CAAE;;;;;;;;;EAW1B0B,EAAQ/B,EAAAA,GAAO6B,IAAK;;;;;;;;;EAWpBG,EAAShC,EAAAA,GAAOI,MAAO;;;;;;;;;;;;sBAYdC,GAAKA,EAAEC,MAAMC,OAAOC;WAC/BH,GAAKA,EAAEC,MAAMC,OAAOE;;;;;;;;;;;;;sDC3H/B,MAAMwB,EAA+BC,EAAAA,GAErCC,IAAAA,cAAoB,UAEpB,MAAMC,EAAeC,EAAAA,KAAaC,MAAM,CACpCC,KAAMF,EAAAA,KAAaG,SAAS,YAC5BC,OAASJ,EAAAA,KACKK,QAAQ,iDAAiD,wBACzDF,SAAS,YACvBG,MAAQN,EAAAA,KACMK,QAAQ,eAAe,uBACvBF,SAAS,YACvBI,MAAOP,EAAAA,KACIK,QAAQ,+CAAgD,uBACxDF,SAAS,cAGXK,EAAcrB,IAAwC,IAAvC,gBAACsB,EAAe,iBAAEC,GAAiBvB,EAE7D,MAAMwB,EAAUC,IAAWC,EAAAA,EAAAA,WAAS,GAC9BC,EAASlB,IAMPmB,GAAOC,EAAAA,EAAAA,IAAYC,EAAAA,IAEnBC,EAAgB,CACpBhB,KAAMa,EAAKb,MAAQ,OACnBK,MAAOQ,EAAKR,OAAQ,iBACpBD,MAAOS,EAAKT,OAAS,OACrBF,OAAQW,EAAKX,SAET,SACFe,EAAQ,aACRC,EACCC,WAAW,OAAEC,EAAM,cAAEC,GAAe,MACpCC,IACGC,EAAAA,EAAAA,IAAoB,CACxBC,UAAUC,EAAAA,EAAAA,GAAY5B,GACtB6B,KAAM,SACNV,kBAGEd,EAASoB,EAAM,UACftB,EAAMsB,EAAM,SAoBhBK,EAAAA,EAAAA,YAAU,KACJpB,EACFqB,SAASC,KAAKC,UAAUC,IAAI,aAE5BH,SAASC,KAAKC,UAAUE,OAAO,aAG1B,KACLJ,SAASC,KAAKC,UAAUE,OAAO,YAAY,IAE5C,CAACzB,IA4BN,OACI0B,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UAERF,EAAAA,EAAAA,KAACrC,IAAK,CACIwC,OAAQ7B,EACR8B,eAAgBA,KACd7B,GAAiB,EAAM,EAGzB8B,MAjEe,CACjBC,QAAS,CACPC,gBAAiB,yBAGnBC,QAAS,CACPC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,wBACXC,QAAS,OACTC,aAAc,OACdT,gBAAiB,YAqDjBU,aAAa,kBAAiBf,UAE5BgB,EAAAA,EAAAA,MAAC3F,EAAS,CAAA2E,SAAA,EACLF,EAAAA,EAAAA,KAAC1D,EAAS,CACR6E,QAASA,KACT5C,GAAiB,EAAM,EACrB2B,UACGF,EAAAA,EAAAA,KAAA,OAAKoB,MAAO,OAAOC,OAAO,OAAMnB,UAC7BF,EAAAA,EAAAA,KAAA,OAAKsB,UAAWC,EAAAA,EAAS,iBAInCvB,EAAAA,EAAAA,KAACzD,EAAK,CAAA2D,SAAC,sBAEPgB,EAAAA,EAAAA,MAAA,QAAMM,SAAUvC,GAlDVwC,UAEf,IACE,IAAIC,EAAe,CAAC,EAEjBC,EAAK5D,OAAOa,EAAKb,OAClB2D,EAAK3D,KAAK4D,EAAK5D,MAEd4D,EAAKvD,QAAQQ,EAAKR,QACnBsD,EAAKtD,MAAMuD,EAAKvD,OAEfuD,EAAKxD,QAAQS,EAAKT,QACnBuD,EAAKvD,MAAMwD,EAAKxD,OAEfwD,EAAK1D,SAASW,EAAKX,SACpByD,EAAKzD,OAAO0D,EAAK1D,cAEXU,GAASiD,EAAAA,EAAAA,IAAcF,IAE7BnD,GAAiB,EACrB,CAAE,MAAOsD,GAEPC,EAAAA,GAAoBD,MAAMA,EAAME,SAAW,oBAAqB,QAAS,IAC3E,KA2BgD7B,SAAA,CAE/B1B,GAGGwB,EAAAA,EAAAA,KAACtD,EAAU,CAACsF,IAAK/D,EAAQgE,IAAKlE,KAF9BiC,EAAAA,EAAAA,KAACtD,EAAU,CAACsF,IAAKE,EAAeD,IAAKlE,KAIjDmD,EAAAA,EAAAA,MAACtE,EAAc,CAAAsD,SAAA,EACVgB,EAAAA,EAAAA,MAACrE,EAAY,CAAAqD,SAAA,EACXF,EAAAA,EAAAA,KAAClD,EAAK,CAACqF,GAAG,SACHC,YAAY,YACdnF,WAAYkC,EAAOlB,OACnBf,YAAaiC,EAAOlB,QAAUmB,EAAcnB,UAEtCe,EAAS,SAAU,CACrBhB,SAAU,WACVqE,QAAS,CACLC,MAAO,iDACPP,QAAS,4BAGrB5C,EAAOlB,SAAU+B,EAAAA,EAAAA,KAACzC,EAAK,CAAA2C,SAAEf,EAAOlB,OAAO8D,WACtC5C,EAAOlB,QAAUmB,EAAcnB,SAAU+B,EAAAA,EAAAA,KAAC1C,EAAc,CAAA4C,SAAC,yBAI7DgB,EAAAA,EAAAA,MAAC/D,EAAU,CAACoF,KAAK,SAASpB,QArInBqB,KACxB/D,GAAU,EAAK,EAoIyDyB,SAAA,EAC9CF,EAAAA,EAAAA,KAAC5C,EAAc,CAAA8C,SAAC,oBAChBF,EAAAA,EAAAA,KAAA,OAAKoB,MAAO,GAAIC,OAAQ,GAAGnB,UACvBF,EAAAA,EAAAA,KAAA,OAAKsB,UAAWC,EAAAA,EAAS,gCAK1CvB,EAAAA,EAAAA,KAAClD,EAAK,CAACqF,GAAG,OACCC,YAAY,OACZnF,WAAYkC,EAAOpB,KACnBb,YAAaiC,EAAOpB,MAAQqB,EAAcrB,QAEpCiB,EAAS,OAAQ,CACnBhB,SAAU,eAElBmB,EAAOpB,OAAQiC,EAAAA,EAAAA,KAACzC,EAAK,CAAA2C,SAAEf,EAAOpB,KAAKgE,WAClC5C,EAAOpB,MAAQqB,EAAcrB,OAAQiC,EAAAA,EAAAA,KAAC1C,EAAc,CAAA4C,SAAC,oBAE5DF,EAAAA,EAAAA,KAAClD,EAAK,CACJyF,KAAK,QACLJ,GAAG,QACHC,YAAY,WACRpD,EAAS,QAAS,CAClBhB,SAAU,WACVqE,QAAS,CACLC,MAAO,+CACPP,QAAS,yBAGjB9E,WAAYkC,EAAOf,MACnBlB,YAAaiC,EAAOf,OAASgB,EAAchB,QAE9Ce,EAAOf,QAAS4B,EAAAA,EAAAA,KAACzC,EAAK,CAAA2C,SAAEf,EAAOf,MAAM2D,WACpC5C,EAAOf,OAASgB,EAAchB,QAAS4B,EAAAA,EAAAA,KAAC1C,EAAc,CAAA4C,SAAC,qBAEzDF,EAAAA,EAAAA,KAAClD,EAAK,CACFyF,KAAK,QACLJ,GAAG,QACHC,YAAY,WACRpD,EAAS,QAAS,CAClBhB,SAAU,WACVqE,QAAS,CACLC,MAAO,eACPP,QAAS,yBAGjB9E,WAAYkC,EAAOhB,MACnBjB,YAAaiC,EAAOhB,OAASiB,EAAcjB,QAE9CgB,EAAOhB,QAAS6B,EAAAA,EAAAA,KAACzC,EAAK,CAAA2C,SAAEf,EAAOhB,MAAM4D,WACpC5C,EAAOhB,OAASiB,EAAcjB,QAAS6B,EAAAA,EAAAA,KAAC1C,EAAc,CAAA4C,SAAC,qBAEzDF,EAAAA,EAAAA,KAACxC,EAAM,CAAC+E,KAAK,oBAIlB,ECvOEE,EAAYA,KACrB,MAAOnE,EAAgBC,IAAkBG,EAAAA,EAAAA,WAAS,GAE5CgE,EAAqBA,KACvBnE,GAAiB,EAAK,EAE1B,OACI2C,EAAAA,EAAAA,MAAC3F,EAAS,CAAA2E,SAAA,EACNgB,EAAAA,EAAAA,MAACxF,EAAe,CAAAwE,SAAA,EACXF,EAAAA,EAAAA,KAACrE,EAAU,CAAC4G,KAAK,SAASpB,QAASuB,EAAoBxC,SAAC,UACxDF,EAAAA,EAAAA,KAAC9D,EAAG,CAAAgE,UACDF,EAAAA,EAAAA,KAAA,OAAKsB,UAAWC,EAAAA,EAAS,sBAGjCvB,EAAAA,EAAAA,KAAC5D,EAAY,CAAA8D,UACRF,EAAAA,EAAAA,KAAC3D,EAAO,CAAC+E,MAAO,GAAIC,OAAQ,GAAIF,QAASuB,EAAoBxC,UAC1DF,EAAAA,EAAAA,KAAA,OAAKsB,UAAWC,EAAAA,EAAS,oBAIjCvB,EAAAA,EAAAA,KAAC3B,EAAa,CAACC,gBAAiBA,EAAiBC,iBAAkBA,MAC3D,ECrBPoE,EAAWnH,EAAAA,GAAOC,GAAI;;;;;;;;;;EAYtBiB,EAAalB,EAAAA,GAAOmB,GAAI;;;;;;;;;;EAYxBiG,EAAOpH,EAAAA,GAAOK,CAAa;;;;;;;;;;;;;UAa7BgH,GAAWA,EAAMC,WAAa,sBAAwB;EAGpDC,EAAavH,EAAAA,GAAOK,CAAE;;;;;;;;;;;;;;;;EAkBtBmH,EAAYxH,EAAAA,GAAOgB,EAAG;;;;;;;;;;;;;ECxDtByG,EAAUA,KAEnB,MAAMrE,GAAOC,EAAAA,EAAAA,IAAYC,EAAAA,IACnBoE,EAAYtE,EAAKX,QAAUiE,EAC3BiB,EAAWvE,EAAKb,MAAQ,OACxBqF,EAAYxE,EAAKR,OAAQ,iBACzBiF,EAAYzE,EAAKT,OAAS,OAE1BmF,EAA6B,SAAbH,EAChBI,EAA+B,mBAAdH,EACjBI,EAA+B,SAAdH,GAEjB7E,EAAUC,IAAaC,EAAAA,EAAAA,WAAS,GAMtC,OACIwC,EAAAA,EAAAA,MAAA,OAAAhB,SAAA,CACKtB,EAAKX,QAAQO,GACVwB,EAAAA,EAAAA,KAACtD,EAAU,CAAC0E,MAAO,GAAIC,OAAQ,GAAIW,IAAKkB,EAAWjB,IAAI,iBAGvDjC,EAAAA,EAAAA,KAACtD,EAAU,CAAC0E,MAAO,GAAIC,OAAQ,GAAKW,IAAKE,EAAeD,IAAI,iBAGhEjC,EAAAA,EAAAA,KAAC+C,EAAU,CAAC5B,QAbMqB,KACtB/D,GAAU,EAAK,EAY8ByB,SAAC,kBAE1CF,EAAAA,EAAAA,KAACgD,EAAS,CAAA9C,SAAC,oBAEXgB,EAAAA,EAAAA,MAACyB,EAAQ,CAAAzC,SAAA,EACLF,EAAAA,EAAAA,KAAC4C,EAAI,CAACE,WAAYQ,EAAcpD,SAAEiD,KAClCnD,EAAAA,EAAAA,KAAC4C,EAAI,CAACE,WAAYS,EAAerD,SAAEkD,KACnCpD,EAAAA,EAAAA,KAAC4C,EAAI,CAACE,WAAYU,EAAetD,SAAEmD,SAErC,E,cC1CP,MAAM9H,EAAYC,EAAAA,GAAOC,GAAI;;;EAKvBc,EAAQf,EAAAA,GAAOK,CAAE;;;;;;;;;;EAYjB2B,EAAShC,EAAAA,GAAOI,MAAO;;;;;;;;;;;;;;;;;;;;;;;;;;EChBvB6H,EAAOA,KAEhB,MAAMC,GAAWC,EAAAA,EAAAA,MAMjB,OACIzC,EAAAA,EAAAA,MAAC3F,EAAS,CAAA2E,SAAA,EACNF,EAAAA,EAAAA,KAACzD,EAAK,CAAA2D,SAAC,aACPF,EAAAA,EAAAA,KAACxC,EAAM,CAAC+E,KAAK,SAASpB,QAPVyC,KAChBF,EAAS,WAAW,EAM6BxD,SAAC,iBACtC,ECZP2D,EAAerI,EAAAA,GAAOI,MAAO;;;;;;;;;;EAY7BL,EAAWC,EAAAA,GAAOsI,EAAG;;;;;;;;;;EAYrBC,EAAKvI,EAAAA,GAAOmB,GAAI;;;;;;;EAQhBqH,EAAexI,EAAAA,GAAOC,GAAI;;EAG1BwI,GAAgBzI,EAAAA,GAAOC,GAAI;;;;EAM3Bc,GAAOf,EAAAA,GAAOgB,EAAG;;;;;;;EAQjB0H,GAAgB1I,EAAAA,GAAOC,GAAI;;;EAK3B0I,GAAY3I,EAAAA,GAAOK,CAAE;;;;;;;EAQrBuI,GAAW5I,EAAAA,GAAOK,CAAE;;;;;;;EC1D3B4B,GAA+BC,EAAAA,GAExB2G,GAAUrH,IAAU,IAAT,IAACsH,GAAItH,EACzB,MAAM,OAACuH,EAAM,MAAEC,EAAK,KAAEzG,EAAI,SAAE0G,EAAQ,IAAEC,EAAG,QAAEC,EAAO,IAAEC,GAAMN,EACpD3F,EAASlB,KAKf,OACIyD,EAAAA,EAAAA,MAAC3F,EAAS,CAAA2E,SAAA,EACNF,EAAAA,EAAAA,KAAC+D,EAAG,CAAC/B,IAAKuC,EAAQtC,IAAKuC,KACvBtD,EAAAA,EAAAA,MAAC8C,EAAa,CAAA9D,SAAA,EACVgB,EAAAA,EAAAA,MAAC+C,GAAc,CAAA/D,SAAA,EACXF,EAAAA,EAAAA,KAACzD,GAAK,CAAA2D,SAAEsE,KACRxE,EAAAA,EAAAA,KAAC6D,EAAY,CAACtB,KAAK,SAASpB,QAASA,IAVjCyD,KAChBjG,GAASkG,EAAAA,EAAAA,IAAUD,GAAK,EAS6BE,CAAaF,GAAK1E,UACvDF,EAAAA,EAAAA,KAAA,OAAKoB,MAAO,GAAIC,OAAQ,GAAGnB,UACvBF,EAAAA,EAAAA,KAAA,OAAKsB,UAAWC,EAAAA,EAAS,0BAKtCL,EAAAA,EAAAA,MAACgD,GAAc,CAAAhE,SAAA,EACXgB,EAAAA,EAAAA,MAAA,OAAAhB,SAAA,EACKF,EAAAA,EAAAA,KAACmE,GAAU,CAAAjE,SAAC,UACZF,EAAAA,EAAAA,KAACoE,GAAS,CAAAlE,SAAEnC,QAEjBmD,EAAAA,EAAAA,MAAA,OAAAhB,SAAA,EACKF,EAAAA,EAAAA,KAACmE,GAAU,CAAAjE,SAAC,cACZF,EAAAA,EAAAA,KAACoE,GAAS,CAAAlE,SAAEuE,QAEjBvD,EAAAA,EAAAA,MAAA,OAAAhB,SAAA,EACKF,EAAAA,EAAAA,KAACmE,GAAU,CAAAjE,SAAC,SACZF,EAAAA,EAAAA,KAACoE,GAAS,CAAAlE,SAAEwE,QAEjBxD,EAAAA,EAAAA,MAAA,OAAAhB,SAAA,EACKF,EAAAA,EAAAA,KAACmE,GAAU,CAAAjE,SAAC,aACZF,EAAAA,EAAAA,KAACoE,GAAS,CAAAlE,SAAEyE,eAKhB,EC/CPpJ,GAAWC,EAAAA,GAAOuJ,EAAG;;;;;;;;;;ECQ5BtH,GAA+BC,EAAAA,GAaxBsH,GAASA,KAClB,MACMC,GADSpG,EAAAA,EAAAA,IAA6CC,EAAAA,IACxCmG,KAEdtG,EAASlB,KAMf,OAJAiC,EAAAA,EAAAA,YAAU,KACNf,GAASuG,EAAAA,EAAAA,MAAgB,GACxB,CAACvG,KAGFqB,EAAAA,EAAAA,KAACzE,GAAS,CAAA2E,SACD,OAAJ+E,QAAI,IAAJA,OAAI,EAAJA,EAAME,KAAIb,IACPtE,EAAAA,EAAAA,KAACqE,GAAQ,CAAeC,IAAKA,GAAdA,EAAIM,QAEf,ECnCPQ,GAAUA,KAEflE,EAAAA,EAAAA,MAAAjB,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAACyD,EAAM,KACPzD,EAAAA,EAAAA,KAACgF,GAAQ,O,eCLZ,MAAMzJ,GAAWC,EAAAA,GAAOC,GAAI;;ECItB4J,GAASA,KAEdnE,EAAAA,EAAAA,MAAC3F,GAAS,CAAA2E,SAAA,EACPF,EAAAA,EAAAA,KAACyC,EAAW,KACZzC,EAAAA,EAAAA,KAACiD,EAAS,KACVjD,EAAAA,EAAAA,KAACoF,GAAS,KACVpF,EAAAA,EAAAA,KAACsF,GAAAA,EAAS,OCVR/J,GAAYC,EAAAA,GAAOC,GAAI;;ECAvBC,GAAkBF,EAAAA,GAAOC,GAAI;;;;EAM7B+B,GAAShC,EAAAA,GAAOI,MAAO;;;;;;;;;;;;;;;;;;;;;;;EAyBvB2J,GAAiB/J,EAAAA,GAAOK,CAAE;cACzBA,GAAGA,EAAEC,MAAMW,QAAQ;;;;;;;;EAUpB+I,GAAiBhK,EAAAA,GAAO6B,IAAK;;;;;;;QAOlCxB,GAAGA,EAAEC,MAAMC,OAAOC;iBC3C1B,MAAMyB,GAA+BC,EAAAA,GAExB+H,GAAUA,KACnB,MAAMC,EAAgBC,IAAmBjH,EAAAA,EAAAA,WAAS,IAC5CkH,EAAUC,IAAWnH,EAAAA,EAAAA,WAAS,IAC7BoH,EAAcC,IAAmBrH,EAAAA,EAAAA,WAAS,GAE3CC,EAASlB,KACTuI,GAASnH,EAAAA,EAAAA,IAAYC,EAAAA,IACrBmH,EAAWD,EAASE,iBACpBC,EAAOH,EAASI,cAetB,OACIlF,EAAAA,EAAAA,MAAAjB,EAAAA,SAAA,CAAAC,SAAA,EACAgB,EAAAA,EAAAA,MAACxF,GAAe,CAAAwE,SAAA,EACZF,EAAAA,EAAAA,KAACxC,GAAM,CAAC+E,KAAK,SAASpB,QAhBNkF,KACpBV,GAAkB,GAClBE,GAAU,GACVlH,GAASuG,EAAAA,EAAAA,OACTa,EAAgBE,GAAaA,EAAUK,OAAS,EAAE,EAYGpG,SAAC,sBAClDF,EAAAA,EAAAA,KAACxC,GAAM,CAAC+E,KAAK,SAASpB,QAVXoF,KACfZ,GAAkB,GAClBE,GAAU,GACVlH,GAASuG,EAAAA,EAAAA,MAAgB,EAOuBhF,SAAC,cAG5CwF,IAAiBE,IAAW5F,EAAAA,EAAAA,KAACwG,GAAAA,EAAW,CAACC,QAASR,EAAWS,OAAO,KACnEhB,GAAgBE,IAAW5F,EAAAA,EAAAA,KAACwG,GAAAA,EAAW,CAACC,QAASN,EAAQO,OAAO,KAChEZ,GAAcJ,IAAgBxE,EAAAA,EAAAA,MAACqE,GAAc,CAAArF,SAAA,CAAC,SAC5CF,EAAAA,EAAAA,KAACwF,GAAc,CAAAtF,SAAC,yCAAqD,mIAE1E,ECxCI,SAASyG,KAEpB,OACIzF,EAAAA,EAAAA,MAAC3F,GAAS,CAAA2E,SAAA,EACPF,EAAAA,EAAAA,KAACqF,GAAQ,KACTrF,EAAAA,EAAAA,KAACyF,GAAS,MAGrB,C,0DCPO,MAAMmB,EAAgBpL,EAAAA,GAAOsI,EAAG;;;;;;;EAQ1BC,EAAMvI,EAAAA,GAAOmB,GAAI;;;EAKjBJ,EAAQf,EAAAA,GAAOqL,EAAG;;;;;;EAQlBC,EAAStL,EAAAA,GAAOK,CAAE;;;;;EAOlBkL,EAAevL,EAAAA,GAAOuJ,EAAG;;;;;EAOzBd,EAAgBzI,EAAAA,GAAOC,GAAI;;;;EAM3BuL,EAAmBxL,EAAAA,GAAOC,GAAI;;;;;EAO9B0I,EAAY3I,EAAAA,GAAOK,CAAE;;;;;;;EAkBrBoL,GATWzL,EAAAA,GAAOK,CAAE;;;;;;;EASXL,EAAAA,GAAOK,CAAE;;;;;;;;;GAWlBH,EAAiBF,EAAAA,GAAOC,GAAI;;;EAK5B+B,EAAShC,EAAAA,GAAOI,MAAO;;;;;;;cAOtBC,GAAKA,EAAEC,MAAMC,OAAOC;;;;;;;;SAQzBH,GAAGA,EAAEC,MAAMC,OAAOE;;EAIdiL,EAAY1L,EAAAA,GAAOI,MAAuB;;;;;;;;oBAQlCiH,GAAWA,EAAMsE,mBAAqB,UAAY;;;;;;;mCCjHhE,MAAM5L,EAAYC,EAAAA,GAAOC,GAAI;;;EAKvBa,EAAYd,EAAAA,GAAOC,GAAI;;;;;;;EASvBW,EAAeZ,EAAAA,GAAOC,GAAI;;;;;;;;;EAW1BsI,EAAMvI,EAAAA,GAAOmB,GAAI;;;EAKjBJ,EAAQf,EAAAA,GAAO4L,EAAG;;;;;;;;SAQtBvL,GAAKA,EAAEC,MAAMC,OAAOC;EAGhBqL,EAAO7L,EAAAA,GAAOK,CAAE;;;;;;;;;yBC7B7B8B,IAAAA,cAAoB,UAEb,MAAM2J,EAA+CtK,IAAwD,IAAvD,qBAAEuK,EAAoB,wBAAEC,GAAyBxK,EAkCxG,OAZF0C,EAAAA,EAAAA,YAAU,KACJ6H,EACF5H,SAASC,KAAKC,UAAUC,IAAI,aAE5BH,SAASC,KAAKC,UAAUE,OAAO,aAG1B,KACLJ,SAASC,KAAKC,UAAUE,OAAO,YAAY,IAE5C,CAACwH,KAGAvH,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACAF,EAAAA,EAAAA,KAACrC,IAAK,CACJwC,OAAQoH,EACRnH,eAAgBA,KACdoH,GAAwB,EAAM,EAGhCnH,MAvCe,CACnBC,QAAS,CACPC,gBAAiB,yBAEnBC,QAAS,CACPC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,wBACXC,QAAS,OACT0G,SAAU,QACVC,UAAW,QACX1G,aAAc,OACdT,gBAAiB,YA0BfU,aAAa,kBAAiBf,UAEtCgB,EAAAA,EAAAA,MAAC3F,EAAS,CAAA2E,SAAA,EACFF,EAAAA,EAAAA,KAAC1D,EAAS,CACP6E,QAASA,KACNqG,GAAwB,EAAM,EAC/BtH,UACDF,EAAAA,EAAAA,KAAA,OAAKoB,MAAO,OAAOC,OAAO,OAAMnB,UAC5BF,EAAAA,EAAAA,KAAA,OAAKsB,UAAWC,EAAAA,EAAS,iBAIhCvB,EAAAA,EAAAA,KAAC5D,EAAY,CAAA8D,UACXF,EAAAA,EAAAA,KAAC+D,EAAG,CAAC/B,I,0yCAAgBC,IAAI,YAAYb,MAAO,OAAOC,OAAO,YAG5DrB,EAAAA,EAAAA,KAACzD,EAAK,CAAA2D,SAAC,eAEPF,EAAAA,EAAAA,KAACqH,EAAI,CAAAnH,SAAC,kPAINF,EAAAA,EAAAA,KAAC2H,EAAAA,EAAO,UAKR,ECrFEpM,EAAYC,EAAAA,GAAOC,GAAI;;;EAKvBa,EAAYd,EAAAA,GAAOC,GAAI;;;;;;EAOvBmM,EAAepM,EAAAA,GAAOC,GAAI;;EAI1BS,EAAMV,EAAAA,GAAOC,GAAI;;;;;;;;;;;;;;;;;;SAkBrBI,GAAKA,EAAEC,MAAMC,OAAOC;EAGhB+H,EAAMvI,EAAAA,GAAOmB,GAAI;;;iBAGbd,GAAKA,EAAEC,MAAMW,QAAQ;;;;EAMzBF,EAAQf,EAAAA,GAAO4L,EAAG;;;;;;;;;EAUlBJ,EAAoBxL,EAAAA,GAAOC,GAAI;;;;;EAM/BqL,EAAStL,EAAAA,GAAOK,CAAE;;;;;EAMlBkL,EAAevL,EAAAA,GAAOuJ,EAAG;;;;;EAMzBZ,EAAY3I,EAAAA,GAAOK,CAAE;;;;;;;EASrBwL,EAAM7L,EAAAA,GAAOK,CAAE;;;;;;;;EAUfoL,EAASzL,EAAAA,GAAOK,CAAE;;;;;;;;;EAWlBH,EAAiBF,EAAAA,GAAOC,GAAI;;;;;EAM5BoM,EAAWrM,EAAAA,GAAOI,MAAO;;;;;;oBAMlBC,GAAKA,EAAEC,MAAMC,OAAOC;;;;;;;;;;;QAWhCH,GAAKA,EAAEC,MAAMC,OAAOE;;;;;;EAQf6L,EAAetM,EAAAA,GAAOuM,CAAE;;;;;oBAKjBlM,GAAKA,EAAEC,MAAMC,OAAOiM;;;;;;;;;;;QAWhCnM,GAAKA,EAAEC,MAAMC,OAAOC;;;;;0BC9I5B,MAAMyB,EAA+BC,EAAAA,GAwBrCC,IAAAA,cAAoB,UAEb,MAAMsK,EAAmCjL,IAAmF,IAAlF,kBAAEkL,EAAiB,qBAAEC,EAAoB,OAAEC,EAAM,YAAEC,EAAW,WAAEC,GAAYtL,EACzH,MAAM,OAACuH,EAAM,MAAEC,EAAK,WAAE+D,EAAU,QAAEC,EAAO,KAAEzK,EAAI,SAAE0G,EAAQ,QAAEE,EAAO,IAAED,EAAG,SAAE+D,EAAQ,IAAE7D,EAAG,KAAEhG,GAAMwJ,EACxFzJ,EAASlB,KAsBfiC,EAAAA,EAAAA,YAAU,KACJwI,EACFvI,SAASC,KAAKC,UAAUC,IAAI,aAE5BH,SAASC,KAAKC,UAAUE,OAAO,aAG1B,KACLJ,SAASC,KAAKC,UAAUE,OAAO,YAAY,IAE5C,CAACmI,IAYF,OACElI,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACAF,EAAAA,EAAAA,KAACrC,IAAK,CACJwC,OAAQ+H,EACR9H,eAAgBA,KACd+H,GAAqB,EAAM,EAG7B9H,MAlDe,CACnBC,QAAS,CACPC,gBAAiB,yBAGnBC,QAAS,CACPC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,wBACXC,QAAS,OACT0G,SAAU,QACVC,UAAW,QACX1G,aAAc,OACdT,gBAAiB,YAmCfU,aAAa,kBAAiBf,UAEtCgB,EAAAA,EAAAA,MAAC3F,EAAS,CAAA2E,SAAA,EACFF,EAAAA,EAAAA,KAAC1D,EAAS,CACP6E,QAASA,KACNgH,GAAqB,EAAM,EAC5BjI,UACDF,EAAAA,EAAAA,KAAA,OAAKoB,MAAO,OAAOC,OAAO,OAAMnB,UAC5BF,EAAAA,EAAAA,KAAA,OAAKsB,UAAWC,EAAAA,EAAS,iBAIhCL,EAAAA,EAAAA,MAAC0G,EAAY,CAAA1H,SAAA,EACZF,EAAAA,EAAAA,KAAC+D,EAAG,CAAC/B,IAAKuC,EAAQtC,IAAKuC,KAEvBxE,EAAAA,EAAAA,KAAC9D,EAAG,CAAAgE,SAAEuI,QAGPzI,EAAAA,EAAAA,KAACzD,EAAK,CAAA2D,SAAEsE,KAERtD,EAAAA,EAAAA,MAAC8F,EAAiB,CAAA9G,SAAA,EACZF,EAAAA,EAAAA,KAAA,OAAKoB,MAAO,GAAIC,OAAQ,GAAGnB,UACxBF,EAAAA,EAAAA,KAAA,OAAKsB,UAAWC,EAAAA,EAAS,kBAE5BvB,EAAAA,EAAAA,KAAC8G,EAAM,CAAA5G,SAAEqI,QAEZrH,EAAAA,EAAAA,MAAC6F,EAAa,CAAA7G,SAAA,EAEXgB,EAAAA,EAAAA,MAAA,MAAAhB,SAAA,EACGF,EAAAA,EAAAA,KAACmE,EAAU,CAAAjE,SAAC,UACZF,EAAAA,EAAAA,KAACqH,EAAI,CAAAnH,SAAEnC,QAEVmD,EAAAA,EAAAA,MAAA,MAAAhB,SAAA,EACGF,EAAAA,EAAAA,KAACmE,EAAU,CAAAjE,SAAC,cACZF,EAAAA,EAAAA,KAACqH,EAAI,CAAAnH,SAAEuE,QAEVvD,EAAAA,EAAAA,MAAA,MAAAhB,SAAA,EACGF,EAAAA,EAAAA,KAACmE,EAAU,CAAAjE,SAAC,SACZF,EAAAA,EAAAA,KAACqH,EAAI,CAAAnH,SAAEwE,QAEVxD,EAAAA,EAAAA,MAAA,MAAAhB,SAAA,EACGF,EAAAA,EAAAA,KAACmE,EAAU,CAAAjE,SAAC,aACZF,EAAAA,EAAAA,KAACqH,EAAI,CAAAnH,SAAEyE,WAIb3E,EAAAA,EAAAA,KAACiH,EAAO,CAAA/G,SAAEsI,KAEVtH,EAAAA,EAAAA,MAACxF,EAAe,CAAAwE,SAAA,EACdgB,EAAAA,EAAAA,MAAC2G,EAAS,CAACtF,KAAK,SAASpB,QAASA,IApEnByD,KACpB0D,GAIH3J,GAAS+J,EAAAA,EAAAA,IAAc9D,IACvByD,GAAY,KAJV1J,GAASgK,EAAAA,EAAAA,IAAW/D,IACpByD,GAAY,GAIhB,EA6DkDO,CAAkBhE,GAAK1E,SAAA,CAAC,WAC3DF,EAAAA,EAAAA,KAAA,OAAKoB,MAAO,GAAIC,OAAQ,GAAGnB,UACvBF,EAAAA,EAAAA,KAAA,OAAKsB,UAAWC,EAAAA,EAAS,wBAG7B,OAAJ3C,QAAI,IAAJA,OAAI,EAAJA,EAAMT,SACL6B,EAAAA,EAAAA,KAAC8H,EAAa,CAACe,GAAG,IAAIC,KAAO,OAAMlK,EAAKT,QAAQ+B,SAAC,qBAOxD,E,wBC7IX,MAAMzC,EAA+BC,EAAAA,GAGxBqL,EAAY/L,IAAoB,IAAnB,OAACoL,EAAM,MAAE1B,GAAM1J,EAErC,MAAM2B,EAASlB,IAETuL,GAAanK,EAAAA,EAAAA,IAAYoK,EAAAA,IAEzBhD,GAAYpH,EAAAA,EAAAA,IAAYqK,EAAAA,IACxBC,GAAStK,EAAAA,EAAAA,IAAYuK,EAAAA,KAErB,OAAC7E,EAAM,MAAEC,EAAK,WAAE+D,EAAU,QAAEC,EAAO,KAAEzK,EAAI,SAAE0G,EAAQ,QAAEE,EAAO,SAAE8D,EAAQ,IAAE/D,EAAG,IAAEE,GAAKwD,GACjFb,EAAsBC,IAA2B9I,EAAAA,EAAAA,WAAS,IAC1DwJ,EAAmBC,IAAwBzJ,EAAAA,EAAAA,WAAS,IACpD4J,EAAYD,IAAa3J,EAAAA,EAAAA,UAASuH,EAAUoD,SAASzE,IAEtD0E,EAAmBA,KACrB9B,GAAwB,EAAK,EAO3B+B,EAAgB3E,IACdoE,GAJJb,GAAqB,GAMjBxJ,GAAS6K,EAAAA,EAAAA,IAAe5E,KAExB0E,GACJ,EAcEG,EAAwB7E,IACtBoE,EAZsBpE,KACrB0D,GAKD3J,GAAS+J,EAAAA,EAAAA,IAAc9D,IACvByD,GAAY,GACZqB,QAAQC,IAAK1D,KANbtH,GAASgK,EAAAA,EAAAA,IAAW/D,IACpByD,GAAY,GACbqB,QAAQC,IAAK1D,GAIW,EAKvB2D,CAAqBhF,GAErB0E,GACJ,EAaJ,OACIpI,EAAAA,EAAAA,MAAC0F,EAAa,CAAA1G,SAAA,EACVF,EAAAA,EAAAA,KAAC+D,EAAG,CAAC/B,IAAMuC,EAAQtC,IAAKuC,KACzBtD,EAAAA,EAAAA,MAAC+C,EAAc,CAAA/D,SAAA,EACZF,EAAAA,EAAAA,KAACzD,EAAK,CAAA2D,SAAEsE,KACRtD,EAAAA,EAAAA,MAAC8F,EAAiB,CAAA9G,SAAA,EACfF,EAAAA,EAAAA,KAAA,OAAKoB,MAAO,GAAIC,OAAQ,GAAGnB,UACxBF,EAAAA,EAAAA,KAAA,OAAKsB,UAAWC,EAAAA,EAAS,kBAE5BvB,EAAAA,EAAAA,KAAC8G,EAAM,CAAA5G,SAAEqI,WAIdrH,EAAAA,EAAAA,MAAC6F,EAAa,CAAA7G,SAAA,EAEVgB,EAAAA,EAAAA,MAAA,MAAAhB,SAAA,EACIF,EAAAA,EAAAA,KAACmE,EAAU,CAAAjE,SAAC,UACZF,EAAAA,EAAAA,KAAA,KAAAE,SAAInC,QAERmD,EAAAA,EAAAA,MAAA,MAAAhB,SAAA,EACIF,EAAAA,EAAAA,KAACmE,EAAU,CAAAjE,SAAC,cACZF,EAAAA,EAAAA,KAAA,KAAAE,SAAIuE,QAERvD,EAAAA,EAAAA,MAAA,MAAAhB,SAAA,EACIF,EAAAA,EAAAA,KAACmE,EAAU,CAAAjE,SAAC,SACZF,EAAAA,EAAAA,KAAA,KAAAE,SAAIwE,QAERxD,EAAAA,EAAAA,MAAA,MAAAhB,SAAA,EACIF,EAAAA,EAAAA,KAACmE,EAAU,CAAAjE,SAAC,aACZF,EAAAA,EAAAA,KAAA,KAAAE,SAAIyE,QAERzD,EAAAA,EAAAA,MAAA,MAAAhB,SAAA,EACIF,EAAAA,EAAAA,KAACmE,EAAU,CAAAjE,SAAC,cACZF,EAAAA,EAAAA,KAAA,KAAAE,SAAIuI,WAKbzI,EAAAA,EAAAA,KAACiH,EAAO,CAAA/G,SAAEsI,KACVtH,EAAAA,EAAAA,MAACxF,EAAe,CAAAwE,SAAA,EAEZF,EAAAA,EAAAA,KAACxC,EAAM,CAAC+E,KAAK,SAASpB,QAASA,IAAIoI,EAAa3E,GAAK1E,SAAC,eACrDwG,IACD1G,EAAAA,EAAAA,KAACkH,EAAS,CAAC/F,QAASA,IArDFM,WACzB,UACU9C,GAAS+J,EAAAA,EAAAA,IAAc9D,IAC7ByD,GAAY,SACN1J,GAASuG,EAAAA,EAAAA,MACnB,CAAE,MAAOrD,GACL6H,QAAQ7H,MAAM,kCAAmCA,EACrD,GA8CiCgI,CAAqBjF,GAAK1E,UAChDF,EAAAA,EAAAA,KAAA,OAAKoB,MAAO,GAAIC,OAAQ,GAAGnB,UACxBF,EAAAA,EAAAA,KAAA,OAAKsB,UAAWC,EAAAA,EAAS,uBAI9BmF,IAAO1G,EAAAA,EAAAA,KAACkH,EAAS,CAACC,mBAAoBmB,EAAYnH,QAASA,IAAMsI,EAAqB7E,GAAK1E,UACzFF,EAAAA,EAAAA,KAAA,OAAKoB,MAAO,GAAIC,OAAQ,GAAGnB,UACxBF,EAAAA,EAAAA,KAAA,OAAKsB,UAAWC,EAAAA,EAAS,wBAMpCvB,EAAAA,EAAAA,KAACsH,EAAc,CAACC,qBAAsBA,EAAsBC,wBAAyBA,KACrFxH,EAAAA,EAAAA,KAACiI,EAAW,CAACG,OAAQe,EACrBd,YAAaA,EAAaC,WAAYA,EACtCJ,kBAAmBA,EAAmBC,qBAAsBA,MAE/C,ECvIX5M,EAAYC,EAAAA,GAAOuJ,EAAG;;;;;;;;;;;;;;;ECmBtByB,EAAuCxJ,IAA2B,IAA1B,QAACyJ,EAAO,MAAEC,GAAM,GAAM1J,EAEvE,OACIgD,EAAAA,EAAAA,KAACzE,EAAS,CAAA2E,SACE,OAAPuG,QAAO,IAAPA,OAAO,EAAPA,EAAStB,KAAI2E,IACd9J,EAAAA,EAAAA,KAAC+I,EAAW,CAAiBX,OAAQ0B,EAAOpD,MAAOA,GAAjCoD,EAAMlF,QAGhB,C,yFC1BX,MAAMmF,EAAcC,GAAkBA,EAAMC,KAAKA,KAC3CC,EAAoBF,GAAkBA,EAAMC,KAAKE,WAEjDC,EAAiBJ,GAAkBA,EAAMvD,QAAQA,QACjD2C,EAAmBY,GAAkBA,EAAMvD,QAAQ0C,SACnDD,EAAkBc,GAAkBA,EAAMvD,QAAQ6B,WAClD+B,EAAiBL,GAAkBA,EAAMM,QAAQA,QAEjDxL,EAAkBkL,GAAkBA,EAAMpL,KAAKoH,Q,iBCZ/C,SAASuE,EAAuBC,GAC7C,QAAa,IAATA,EACF,MAAM,IAAIC,eAAe,6DAE3B,OAAOD,CACT,C,iCCLe,SAASE,IAYtB,OAXAA,EAAWC,OAAOC,OAASD,OAAOC,OAAOC,OAAS,SAAUC,GAC1D,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAU1E,OAAQyE,IAAK,CACzC,IAAIE,EAASD,UAAUD,GACvB,IAAK,IAAIG,KAAOD,EACVN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAC/CJ,EAAOI,GAAOD,EAAOC,GAG3B,CACA,OAAOJ,CACT,EACOJ,EAASY,MAAMC,KAAMP,UAC9B,C,iCCbe,SAASQ,EAA8BP,EAAQQ,GAC5D,GAAc,MAAVR,EAAgB,MAAO,CAAC,EAC5B,IAEIC,EAAKH,EAFLD,EAAS,CAAC,EACVY,EAAaf,OAAOgB,KAAKV,GAE7B,IAAKF,EAAI,EAAGA,EAAIW,EAAWpF,OAAQyE,IACjCG,EAAMQ,EAAWX,GACbU,EAASG,QAAQV,IAAQ,IAC7BJ,EAAOI,GAAOD,EAAOC,IAEvB,OAAOJ,CACT,C,iCCXe,SAASe,EAAgBC,EAAGjQ,GAKzC,OAJAgQ,EAAkBlB,OAAOoB,eAAiBpB,OAAOoB,eAAelB,OAAS,SAAyBiB,EAAGjQ,GAEnG,OADAiQ,EAAEE,UAAYnQ,EACPiQ,CACT,EACOD,EAAgBC,EAAGjQ,EAC5B,C","sources":["components/EditUserBtn/EditUserBtn.styled.tsx","components/ModalEditUser/ModalEditUser.styled.tsx","components/ModalEditUser/ModalEditUser.tsx","components/EditUserBtn/EditUserBtn.tsx","components/UserBlock/UserBlock.styled.tsx","components/UserBlock/UserBlock.tsx","components/AddPet/AddPet.styled.tsx","components/AddPet/AddPet.tsx","components/PetsItem/PetsItem.styled.tsx","components/PetsItem/PetsItem.tsx","components/PetsList/PetsList.styled.tsx","components/PetsList/PetsList.tsx","components/PetsBlock/PetsBlock.tsx","components/userCard/userCard.styled.tsx","components/userCard/userCard.tsx","Pages/Profile/Profile.styled.tsx","components/MyNotices/MyNotices.styled.tsx","components/MyNotices/MyNotices.tsx","Pages/Profile/Profile.tsx","components/NoticesItem/NoticeItrm.styled.tsx","components/ModalAttention/ModalAttention.styled.tsx","components/ModalAttention/ModalAttention.tsx","components/ModalNotice/ModalNotice.styled.tsx","components/ModalNotice/ModalNotice.tsx","components/NoticesItem/NoticesItem.tsx","components/NoticesList/NoticeList.styled.tsx","components/NoticesList/NoticesList.tsx","redux/selects.ts","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/extends.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\ndisplay: flex;\njustify-content: space-between;\n`\n\nexport const ContainerButton = styled.div`\nposition: relative;\nwidth: 80px;\nheight: 38px;\n`\n\nexport const ButtonUser = styled.button`\ndisplay: block;\n\nwidth: 80px;\nheight: 38px;\npadding: 10px 14px;\ngap: 4px;\nborder-radius: 30px;\nbackground: ${p=>p.theme.colors.yellow};\n\nfont-family: Manrope;\nfont-size: 14px;\nfont-weight: 500;\nline-height: 1,29;\nletter-spacing: -0.02em;\ncolor: ${p=>p.theme.colors.white};\ntext-align: left;\n\ncursor: pointer;\n`\n\nexport const Svg = styled.svg`\nposition: absolute;\ntop: 25%;\nright:14px;\nwidth: 18px;\nheight: 18px;\ncursor: pointer;\n`\n\nexport const ContainerSvg = styled.div`\ndisplay: flex;\nwidth: 38px;\nheight: 38px;\nborder-radius: 50%;\nbackground: #FFF4DF;\n\n&:hover{\n    background: #FBE7C1;\n}\n`\n\nexport const SvgEdit = styled.svg`\nmargin: auto;\nwidth: 18px;\nheight: 18px;\ncursor: pointer;\n`","import styled from \"styled-components\";\n\ninterface InputProps {\n  $isError?: boolean;\n  $isSuccess?: boolean;\n}\n\n\nexport const Container = styled.div`\nposition: relative;\npadding: 20px 0;\nwidth: 293px;\n\n@media (min-width: 768px) {\n    padding: 50px 30px;\n    width: 380px;\n    }\n`\n\nexport const SvgButton = styled.div`\ndisplay: block;\nposition:absolute;\nright: 0; top: 0;\nborder: none;\nmargin-left: auto;\ncursor: pointer;\n`\n\nexport const Title = styled.h5`\nmargin-bottom: ${p=>p.theme.spacing(4)};\nfont-family: Manrope;\nfont-size: 20px;\nfont-weight: 700;\nline-height: 1;\ntext-align: left;\ncolor: #2B2B2A;\n`\n\nexport const UserAvatar = styled.img`\nmargin: auto;\nmargin-bottom: 10px;\n\nwidth: 80px;\nheight: 80px;\n\n@media (min-width: 768px) {\n    width: 86px;\n    height: 86px;\n    }\n`;\n\n\nexport const ContainerInput = styled.div`\n  display: flex;\n  gap: 10px;\n  margin-bottom: 16px;\n`;\n\nexport const InputWrapper = styled.div`\nwidth: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n\nexport const Input = styled.input<InputProps>`\nwidth: 100%;\n  margin-bottom: 5px;\n  padding: 9px 20px;\n  gap: 10px;\n  border-radius: 30px;\n  border: 1px solid #26262626;\n  outline: none;\n\n  border: 1px solid ${({ $isError, $isSuccess }) =>\n    $isError ? 'red' : $isSuccess ? 'green' : '#08AA83'};\n  \n  &::placeholder {\n    color: rgba(38, 38, 38, 0.5);\n  }\n\n  &:hover {\n    border: 1px solid ${p => p.theme.colors.yellow};\n  }\n`;\n\n\nexport const ButtonLoad = styled.button` \ndisplay: flex;\njustify-content: center;\nalign-items: center;\nwidth: 60%;\nheight: 42px;\ngap: 8px;\nborder-radius: 30px;\nborder:none;\n\nbackground-color: #FFF4DF;\ncursor: pointer;\n\n&:hover{\n    background-color: #FBE7C1;\n}\n`\nexport const ButtonLoadSpan = styled.span` \nfont-family: Manrope;\nfont-size: 12px;\nfont-weight: 500;\nline-height: 1,33;\nletter-spacing: -0.02em;\ncolor: #262626;\n`\n\nexport const SuccessMessage = styled.p`\n  margin-left: 10px;\n  font-family: Manrope;\n  font-size: 10px;\n  font-weight: 500;\n  line-height: 1.2;\n  letter-spacing: -0.03em;\n  text-align: left;\n  color: #08AA83;\n`;\n\nexport const Error = styled.span`\nfont-family: Manrope;\nfont-size: 12px;\nfont-weight: 500;\nline-height: 1,16;\nletter-spacing: -0.03em;\n\n  color: #EF2447;\n  margin-bottom: 8px;\n`;\n\nexport const Button = styled.button`\nmargin-top: 20px;\nwidth: 100%;\nheight: 42px;\n\npadding: 12px ;\ngap: 10px;\nborder-radius: 30px;\ncolor: #262626;\ncursor: pointer;\n\n&:hover {\n  background-color: ${p => p.theme.colors.yellow};\n  color: ${p => p.theme.colors.white};\n}\n\n    &::before {\n      content: 'Go to profile';\n    }\n\n@media (min-width: 769px) {\n    margin-top: 50px;\n    &::before {\n      content: 'Save';\n    }\n  }\n`;","import Modal from \"react-modal\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport sprite from '../../images/sprite.svg';\nimport {Container, SvgButton, Title, UserAvatar, ContainerInput,\n       InputWrapper, Input, ButtonLoad, ButtonLoadSpan, SuccessMessage, Error,\n       Button\n} from './ModalEditUser.styled';\nimport defaultAvatar from '../../images/user.png';\nimport { useDispatch } from \"react-redux\";\nimport { NotificationManager} from 'react-notifications';\nimport { selectorUserFull} from '../../redux/selects';\nimport {fetchUserEdit, DataProps } from '../../redux/operations';\nimport { AppDispatch } from \"../../redux/store\";\n\ninterface FormValues {\n  avatar: string;\n  name: string;\n  email: string;\n  phone: string;\n}\n\nconst useAppDispatch:()=>AppDispatch=useDispatch;\n\nModal.setAppElement('#modal');\n\nconst SignupSchema = Yup.object().shape({\n    name: Yup.string().required('Required'),\n    avatar : Yup.string()\n                 .matches(/^https?:\\/\\/.*\\.(?:png|jpg|jpeg|gif|bmp|webp)$/,'Enter a valid Avatar')\n                 .required('Required'),\n    phone : Yup.string()\n                 .matches(/^\\+38\\d{10}$/,'Enter a valid Phone')\n                 .required('Required'),\n    email: Yup.string()\n              .matches(/^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/ ,'Enter a valid email')\n              .required('Required'),\n});\n\nexport const ModalEditUser=({isModalEditUser, setModalEditUser})=>{\n\n  const[isAvatar, setAvatar]=useState(false);\n  const dispatch=useAppDispatch();\n\n  const handleLoadingAvatar=()=>{\n    setAvatar(true)\n  }\n\n    const user = useSelector(selectorUserFull);\n\n    const defaultValues = {\n      name: user.name || 'Name',\n      email: user.email ||'name@gmail.com',\n      phone: user.phone || '+380',\n      avatar: user.avatar ,\n    };\n    const {\n        register, \n        handleSubmit,\n         formState: { errors, touchedFields }, \n         watch\n        } = useForm<FormValues>({\n        resolver: yupResolver(SignupSchema),\n        mode: 'onBlur',\n        defaultValues\n      });\n\n    const avatar = watch('avatar');\n    const name =watch('name');\n\n    const customStyles = {\n        overlay: {\n          backgroundColor: \"rgba(38, 38, 38, 0.3)\",\n         \n        },\n        content: {\n          top: \"50%\",\n          left: \"50%\",\n          right: \"auto\",\n          bottom: \"auto\",\n          marginRight: \"-50%\",\n          transform: \"translate(-50%, -50%)\",\n          padding: \"20px\",\n          borderRadius: \"30px\",\n          backgroundColor: \"#FFFFFF\",\n        },\n      };\n    \n      useEffect(() => {\n        if (isModalEditUser) {\n          document.body.classList.add('no-scroll');\n        } else {\n          document.body.classList.remove('no-scroll');\n        }\n    \n        return () => {\n          document.body.classList.remove('no-scroll');\n        };\n      }, [isModalEditUser]);\n\n\n      const onSubmit = async (data:DataProps) => {\n\n        try {\n          let info:DataProps={}\n\n          if(data.name!==user.name){\n            info.name=data.name\n          }\n          if(data.email!==user.email){\n            info.email=data.email\n          }\n          if(data.phone!==user.phone){\n            info.phone=data.phone\n          }\n          if(data.avatar!==user.avatar){\n            info.avatar=data.avatar\n          }\n            await dispatch(fetchUserEdit(info));\n        \n            setModalEditUser(false);\n        } catch (error) {\n            \n          NotificationManager.error(error.message || 'An error occurred', 'Error', 5000);\n        }\n    };\n    return(\n        <>\n\n<Modal   \n          isOpen={isModalEditUser}\n          onRequestClose={() => {\n            setModalEditUser(false);\n          }}\n               \n          style={customStyles}\n  \n          contentLabel=\"More info modal\"     \n        >\n            <Container>\n                 <SvgButton\n                   onClick={() => {\n                   setModalEditUser(false);\n                   }}>\n                        <svg width= '24px' height='24px'>\n                           <use xlinkHref={sprite + '#icon-x'} />\n                        </svg> \n                 </SvgButton>\n\n                 <Title>Edit information</Title>\n\n                 <form onSubmit={handleSubmit(onSubmit)}>\n                   \n                       {!isAvatar  ? \n                            <UserAvatar src={defaultAvatar} alt={name} />              \n                                :\n                            <UserAvatar src={avatar} alt={name} />}\n\n                <ContainerInput>\n                     <InputWrapper>\n                       <Input id=\"avatar\" \n                              placeholder=\"Enter URL\"\n                            $isError={!!errors.avatar}\n                            $isSuccess={!errors.avatar && touchedFields.avatar}\n\n                              {...register('avatar', {\n                                required: 'Required',\n                                pattern: {\n                                    value: /^https?:\\/\\/.*\\.(?:png|jpg|jpeg|gif|bmp|webp)$/,\n                                    message: 'Enter a valid avatar',\n                                },\n                            })} />\n                       {errors.avatar && <Error>{errors.avatar.message}</Error>} \n                       {!errors.avatar && touchedFields.avatar && <SuccessMessage>Avatar is secure</SuccessMessage>}                    \n                     </InputWrapper>\n\n                     \n                     <ButtonLoad type='button' onClick={handleLoadingAvatar}>\n                              <ButtonLoadSpan> Upload  photo</ButtonLoadSpan>\n                              <svg width={18} height={18}>\n                                  <use xlinkHref={sprite + '#icon-upload-cloud'}/>\n                              </svg>\n                       </ButtonLoad>\n                 </ContainerInput>\n\n                 <Input id=\"name\" \n                            placeholder=\"Name\"\n                            $isError={!!errors.name}\n                            $isSuccess={!errors.name && touchedFields.name}\n\n                              {...register('name', {\n                                required: 'Required',\n                            })} />\n                       {errors.name && <Error>{errors.name.message}</Error>} \n                       {!errors.name && touchedFields.name && <SuccessMessage>Name is secure</SuccessMessage>} \n\n                  <Input\n                    type=\"email\"\n                    id=\"email\"\n                    placeholder=\"Email\"\n                    {...register('email', {\n                        required: 'Required',\n                        pattern: {\n                            value: /^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/,\n                            message: 'Enter a valid Email',\n                        },\n                    })}\n                    $isError={!!errors.email}\n                    $isSuccess={!errors.email && touchedFields.email}\n                />\n                {errors.email && <Error>{errors.email.message}</Error>}\n                {!errors.email && touchedFields.email && <SuccessMessage>Email is secure</SuccessMessage>}\n\n                <Input\n                    type=\"phone\"\n                    id=\"phone\"\n                    placeholder=\"Phone\"\n                    {...register('phone', {\n                        required: 'Required',\n                        pattern: {\n                            value: /^\\+38\\d{10}$/,\n                            message: 'Enter a valid Phone',\n                        },\n                    })}\n                    $isError={!!errors.phone}\n                    $isSuccess={!errors.phone && touchedFields.phone}\n                />\n                {errors.phone && <Error>{errors.phone.message}</Error>}\n                {!errors.phone && touchedFields.phone && <SuccessMessage>Phone is secure</SuccessMessage>}\n\n                <Button type='submit'></Button>\n              </form>\n            </Container>\n        </Modal>\n        </>\n    )\n}","import { useState } from 'react';\nimport sprite from '../../images/sprite.svg';\nimport {Container, ContainerButton, ButtonUser, Svg, ContainerSvg, SvgEdit} from './EditUserBtn.styled';\nimport {ModalEditUser} from '../ModalEditUser/ModalEditUser';\n\n\nexport const EditUserBtn=()=>{\n    const [isModalEditUser,setModalEditUser]=useState(false);\n\n    const handleModalEditUser =()=>{\n        setModalEditUser(true)\n    }\n    return(\n        <Container>\n            <ContainerButton>\n                 <ButtonUser type=\"button\" onClick={handleModalEditUser}>User</ButtonUser>\n                 <Svg>\n                    <use xlinkHref={sprite + '#icon-user2'}/>\n                 </Svg>                 \n            </ContainerButton>\n            <ContainerSvg>\n                 <SvgEdit width={18} height={18} onClick={handleModalEditUser}>\n                    <use xlinkHref={sprite + '#icon-edit'}/>\n                 </SvgEdit>\n            </ContainerSvg>\n            \n            <ModalEditUser isModalEditUser={isModalEditUser} setModalEditUser={setModalEditUser}/>\n        </Container>\n    )\n}\n","import styled from 'styled-components';\n\ninterface UserProps{\n    $isDefault:boolean\n}\n\nexport const UserInfo = styled.div`\nmargin-bottom: 40px;\n    display: flex;\n    flex-direction: column;\n\n    @media (min-width: 768px) {\n        display: grid;\n        grid-template-columns: repeat(2, 1fr);\n        gap:10px;\n    }\n`;\n\nexport const UserAvatar = styled.img`\nmargin: auto;\n\nwidth: 94px;\nheight: 94px;\n\n@media (min-width: 768px) {\n    width: 110px;\n    height: 110px;\n    }\n`;\n\nexport const User = styled.p<UserProps>`\nmargin-bottom: 10px;\n    font-family: Manrope;\nfont-size: 14px;\nfont-weight: 500;\nline-height: 1,29px;\nletter-spacing: -0.03em;\n\nwidth: 100%;\nheight: 42px;\npadding: 12px;\ngap: 10px;\nborder-radius: 30px;\nborder: ${(props) => (props.$isDefault ? '1px solid #26262626' : '1px solid #F6B83D')};\n`;\n\nexport const UserUpload = styled.p`\nmargin-bottom: 20px;\n\nfont-family: Manrope;\nfont-size: 12px;\nfont-weight: 500;\nline-height: 1,29;\nletter-spacing: -0.02em;\ntext-align: center;\n\ncolor: #262626;\ncursor: pointer;\n\n@media (min-width: 768px) {\n    font-size: 14px;\n    }\n`;\n\nexport const UserTitle = styled.h5`\nmargin-bottom: 20px;\n\nfont-family: Manrope;\nfont-size: 16px;\nfont-weight: 700;\nline-height: 1,25;\n\ncolor: #2B2B2A;\n\n@media (min-width: 768px) {\n    font-size: 18px;\n    }\n`;\n\n","import React, { useState } from 'react';\nimport defaultAvatar from '../../images/user.png';\nimport { useSelector } from 'react-redux';\nimport {UserInfo, User, UserAvatar, UserUpload, UserTitle} from './UserBlock.styled';\n\nimport { selectorUserFull} from '../../redux/selects';\n\n\nexport const UserBlock=()=>{\n\n    const user = useSelector(selectorUserFull);\n    const avatarUrl = user.avatar || defaultAvatar;\n    const userName = user.name || 'Name';\n    const userEmail = user.email ||'name@gmail.com';\n    const userPhone = user.phone || '+380';\n\n    const isDefaultName = userName === 'Name';\n    const isDefaultEmail = userEmail === 'name@gmail.com';\n    const isDefaultPhone = userPhone === '+380';\n\n    const[isAvatar, setAvatar] = useState(false)\n\n    const handleLoadingAvatar=()=>{\n        setAvatar(true)\n    }\n\n    return(\n        <div>\n            {user.avatar&&isAvatar ? (\n                <UserAvatar width={94} height={94} src={avatarUrl} alt=\"User Avatar\" />\n                \n            ) : (\n                <UserAvatar width={94} height={94}  src={defaultAvatar} alt=\"User Avatar\" />\n            )}\n            \n            <UserUpload onClick={handleLoadingAvatar}>Upload photo</UserUpload>\n\n            <UserTitle>My information</UserTitle>\n\n            <UserInfo>\n                <User $isDefault={isDefaultName}>{userName}</User>\n                <User $isDefault={isDefaultEmail}>{userEmail}</User>\n                <User $isDefault={isDefaultPhone}>{userPhone}</User>\n            </UserInfo>\n        </div>\n    )\n}","import styled from \"styled-components\";\n\nexport const Container = styled.div`\ndisplay: flex;\njustify-content: space-between;\n`\n\nexport const Title = styled.p`\nfont-family: Manrope;\nfont-size: 16px;\nfont-weight: 700;\nline-height: 1,25;\ncolor: #2B2B2A;\n\n@media (min-width: 768px) {\n    font-size: 18px;\n}\n`\n\nexport const Button = styled.button`\nwidth: 103px;\nheight: 38px;\npadding: 10px 16px;\ngap: 4px;\nborder-radius: 30px;\nbackground: #F6B83D;\n\nfont-family: Manrope;\nfont-size: 14px;\nfont-weight: 500;\nline-height: 1,25;\nletter-spacing: -0.03em;\ncursor: pointer;\n\ncolor: #FFFFFF;\n\n&:hover{\n    background: #F9B020;\n}\n\n@media (min-width: 768px) {\n    width: 118px;\n    height: 40px;\n    font-size: 16px;\n}\n`\n\n\n\n","import { useNavigate } from 'react-router-dom';\nimport {Container, Title, Button} from './AddPet.styled';\n\nexport const AddPet=()=>{\n\n    const navigate = useNavigate();\n\n    const handleAddPeet=()=>{\n        navigate('/add-pet');\n    }\n\n    return(\n        <Container>\n            <Title>My pets</Title>\n            <Button type=\"button\" onClick={handleAddPeet}> Add pet +</Button>\n        </Container>\n    )\n}","import styled from  \"styled-components\";\n\n\nexport const DeleteButton = styled.button`\ndisplay: block;\nwidth: 30px;\nheight: 30px;\nborder-radius: 50%;\nbackground: #FFF4DF;\n\n&:hover{\n    background: #FBE7C1;\n}\n`\n\nexport const Container= styled.li`\nmargin-bottom: 20px;\npadding: 16px;\n\n\ndisplay: flex;\ngap: 16px;\n\nborder-radius: 20px;\nborder: 1px solid #2626261A;\n`\n\nexport const Img= styled.img`\n\nwidth: 66px;\nheight:66px;\nflex-shrink: 0;\nborder-radius: 50%;\nbackground: #FBE7C1;\n`\nexport const ContainerInfo= styled.div`\nwidth: 100%;\n`\nexport const ContainerTitle= styled.div`\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\n`\n\nexport const Title= styled.h5`\nfont-family: Manrope;\nfont-size: 14px;\nfont-weight: 700;\nline-height: 1,29;\ntext-align: left;\ncolor: #2B2B2A;\n`\nexport const ContainerTable= styled.div`\ndisplay: flex;\njustify-content: space-between;\n`\n\nexport const TitleTable= styled.p`\nfont-family: Manrope;\nfont-size: 10px;\nfont-weight: 500;\nline-height: 1,4;\nletter-spacing: -0.02em;\ncolor: #26262680;\n`\nexport const TextTable= styled.p`\nfont-family: Manrope;\nfont-size: 12px;\nfont-weight: 500;\nline-height: 1,17;\nletter-spacing: -0.02em;\ncolor: #262626;\n`\n\n\n\n\n","import sprite from '../../images/sprite.svg';\nimport {Container, Img, ContainerInfo, ContainerTitle, Title, DeleteButton, ContainerTable, TitleTable,\n        TextTable,} from './PetsItem.styled';\nimport {removePet} from '../../redux/operations';\nimport { useDispatch } from 'react-redux';\nimport { AppDispatch } from '../../redux/store';\n\nconst useAppDispatch:()=>AppDispatch=useDispatch;\n\nexport const PetsItem =({pet})=>{\n    const {imgURL, title, name, birthday, sex, species, _id }=pet;\n    const dispatch=useAppDispatch();\n    const handleDelete=(_id:string)=>{\n        dispatch(removePet(_id))\n    }\n\n    return(\n        <Container>\n            <Img src={imgURL} alt={title}/>\n            <ContainerInfo>\n                <ContainerTitle>\n                    <Title>{title}</Title>\n                    <DeleteButton type='button' onClick={()=>handleDelete(_id)}>\n                        <svg width={16} height={16}>\n                            <use xlinkHref={sprite + '#icon-trash-2'}/>\n                        </svg>\n                    </DeleteButton>\n                </ContainerTitle>\n               \n               <ContainerTable>\n                   <div>\n                        <TitleTable>Name</TitleTable>\n                        <TextTable>{name}</TextTable>\n                   </div>\n                   <div>\n                        <TitleTable>Birthday</TitleTable>\n                        <TextTable>{birthday}</TextTable>\n                   </div>\n                   <div>\n                        <TitleTable>Sex</TitleTable>\n                        <TextTable>{sex}</TextTable>\n                   </div>\n                   <div>\n                        <TitleTable>Species</TitleTable>\n                        <TextTable>{species}</TextTable>\n                   </div>\n         \n               </ContainerTable>\n            </ContainerInfo>\n        </Container>\n    )\n}\n","import styled from \"styled-components\";\n\nexport const Container= styled.ul`\nmargin-top: 20px;\nmargin-bottom: 20px;\nlist-style: none;\n\n@media (min-width: 768px) {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 14px;\n}\n`","import { PetsItem } from \"../PetsItem/PetsItem\";\nimport {Container} from './PetsList.styled';\nimport {selectorUserFull} from '../../redux/selects';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchUserFull } from '../../redux/operations';\nimport { AppDispatch } from \"../../redux/store\";\nimport { RootState } from \"../../redux/store\";\n\n\nconst useAppDispatch:()=>AppDispatch=useDispatch;\n\ninterface PetProps{\n    imgURL:string, \n    title:string, \n    name:string, \n    birthday:string, \n    sex:string, \n    species:string, \n    _id:string\n}\n\n\nexport const PetsList=()=>{\n    const userFull=useSelector<RootState, { pets: PetProps[] }>(selectorUserFull);\n    const pets=userFull.pets;\n\n    const dispatch=useAppDispatch();\n\n    useEffect(()=>{\n        dispatch(fetchUserFull())\n      }, [dispatch])\n\n    return(\n        <Container>\n            {pets?.map(pet=>(\n                <PetsItem key={pet._id} pet={pet}/>\n            ))}\n        </Container>\n    )\n}","import {AddPet} from '../AddPet/AddPet';\nimport { PetsList } from \"../PetsList/PetsList\";\n\nexport const PetsBlock=()=>{\n    return(\n        <>\n          <AddPet/>\n          <PetsList/>\n        </>\n    )\n}","import styled from \"styled-components\";\n\nexport const Container= styled.div`\n  padding: 0 0 40px 0;\n`;","import {EditUserBtn} from '../EditUserBtn/EditUserBtn';\nimport {UserBlock} from '../UserBlock/UserBlock';\nimport { PetsBlock } from '../PetsBlock/PetsBlock';\nimport { LogOutBtn } from '../LogOutBtn/LogOutBtn';\nimport {Container} from './userCard.styled';\n\nexport const UserCard=()=>{\n    return (\n        <Container>\n           <EditUserBtn/>\n           <UserBlock/>\n           <PetsBlock/>\n           <LogOutBtn/>\n        </Container>\n    )\n}","import styled from \"styled-components\";\n\nexport const Container = styled.div`\npadding: 0 20px;\n`","import styled from \"styled-components\";\n\nexport const ContainerButton = styled.div`\ndisplay: flex;\ngap: 10px;\nalign-items: center;\n`\n\nexport const Button = styled.button`\nwidth: 123px;\nheight: 42px;\nborder-radius: 30px;\n\ncolor: #262626;\n\nfont-family: Manrope;\nfont-size: 14px;\nfont-weight: 500;\nline-height: 1,5;\nletter-spacing: -0.03em;\nbackground-color: #FFFFFF;\ncursor: pointer;\n\n&:hover{\n    background-color: #F6B83D;\n    color: #FFFFFF;\n}\n&:active{\n    background-color: #F6B83D;\n    color: #FFFFFF;\n}\n`\n\nexport const NoFavoriteText = styled.p`\nmargin-top: ${p=>p.theme.spacing(8)};\nfont-family: Manrope;\nfont-size: 14px;\nfont-weight: 500;\nline-height: 1,29;\nletter-spacing: -0.02em;\ntext-align: center;\ncolor: #262626;\n`\n\nexport const NoFavoriteSpan = styled.span`\nfont-family: Manrope;\nfont-size: 14px;\nfont-weight: 700;\nline-height: 1,29;\nletter-spacing: -0.02em;\ntext-align: center;\ncolor:${p=>p.theme.colors.yellow}\n`","import {ContainerButton, Button, NoFavoriteText, NoFavoriteSpan} from './MyNotices.styled';\nimport {selectorUserFull} from '../../redux/selects';\nimport { useState } from 'react';\nimport { NoticesList } from '../NoticesList/NoticesList';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {fetchUserFull} from '../../redux/operations';\nimport { AppDispatch } from '../../redux/store';\n\nconst useAppDispatch:()=>AppDispatch=useDispatch;\n\nexport const MyNotices=()=>{\n    const[isFavoritePets, setIsFavoritePets]=useState(false);\n    const[isViewed, setVeiwed]=useState(false);\n    const [hasFavorites, setHasFavorites] = useState(false);\n\n    const dispatch=useAppDispatch();\n    const userFull=useSelector(selectorUserFull);\n    const favorites =userFull.noticesFavorites;\n    const viewed=userFull.noticesViewed;\n\n    const handleFavoritList=()=>{\n        setIsFavoritePets(true);\n        setVeiwed(false);\n        dispatch(fetchUserFull())\n        setHasFavorites(favorites && favorites.length > 0);\n    }\n\n    const handleVeiwed=()=>{\n        setIsFavoritePets(false);\n        setVeiwed(true);\n        dispatch(fetchUserFull())\n    }\n\n    return(\n        <>\n        <ContainerButton>\n            <Button type=\"button\" onClick={handleFavoritList}>My favorite pets</Button>\n            <Button type=\"button\" onClick={handleVeiwed}>Viewed</Button>\n        </ContainerButton>\n            \n            {isFavoritePets&&!isViewed&& <NoticesList notices={favorites} trash={true} />}\n            {!isFavoritePets&&isViewed&& <NoticesList notices={viewed} trash={false}/>}\n            {!hasFavorites&&isFavoritePets&&<NoFavoriteText>Oops, \n                <NoFavoriteSpan>looks like there aren't any furries </NoFavoriteSpan> \n                on our adorable page yet. Do not worry! View your pets on the \"find your favorite pet\" page and add them to your favorites.</NoFavoriteText>}\n        </>\n    )\n}","import {UserCard} from '../../components/userCard/userCard';\nimport {Container} from './Profile.styled';\nimport {MyNotices} from '../../components/MyNotices/MyNotices';\n\n\nexport default function Profile(){\n\n    return(\n        <Container>\n           <UserCard/>\n           <MyNotices/>\n        </Container>\n    )\n}","import styled from \"styled-components\";\n\ninterface ButtonSvgProps{\n    $isDefaultFavorite?:boolean\n}\n\nexport const ContainerItem = styled.li`\npadding: 20px;\n\n@media (min-width: 768px) {\n    width: 100%; \n    margin: 0 auto; \n}\n`\nexport const Img = styled.img`\nborder-radius: 16px;\nmargin-bottom: 20px;\n`\n\nexport const Title = styled.h3`\nfont-family: Manrope;\nfont-size: 16px;\nfont-weight: 700;\nline-height: 1,25;\ncolor: #2B2B2A;\n`\n\nexport const Rating = styled.p`\nfont-family: Manrope;\nfont-size: 14px;\nfont-weight: 500;\nline-height: 1,29;\n`\n\nexport const ContainerList= styled.ul`\ndisplay: flex;\njustify-content: space-between;\nlist-style: none;\nmargin-bottom: 14px;\n`\n\nexport const ContainerTitle= styled.div`\ndisplay: flex;\njustify-content: space-between;\nmargin-bottom: 5px;\n`\n\nexport const ContainerPopulate= styled.div`\ndisplay: flex;\ngap:2px;\njustify-content: center;\nalign-items: center;\n`\n\nexport const TitleTable= styled.p`\nfont-family: Manrope;\nfont-size: 10px;\nfont-weight: 500;\nline-height: 1,4;\nletter-spacing: -0.02em;\ncolor: #26262680;\n`\n\nexport const TextTable= styled.p`\nfont-family: Manrope;\nfont-size: 12px;\nfont-weight: 500;\nline-height: 1,4;\nletter-spacing: -0.02em;\ncolor: #262626;\n`\n\nexport const Comment= styled.p`\nmargin-bottom: 16px;\nfont-family: Manrope;\nfont-size: 14px;\nfont-weight: 500;\nline-height: 1,29;\nletter-spacing: -0.02em;\n\ncolor: #2B2B2A;\n`\n\nexport const ContainerButton= styled.div`\ndisplay: flex;\njustify-content: space-between;\n`\n\nexport const Button = styled.button`\nwidth: 231px;\nheight: 46px;\n\nborder-radius: 30px ;\nbackground: #F6B83D;\n\nbackground: ${p => p.theme.colors.yellow};\n\nfont-family: Manrope;\nfont-size: 14px;\nfont-weight: 500;\nline-height: 1,29px;\nletter-spacing: -0.03em;\ntext-align: center;\ncolor: ${p=>p.theme.colors.white};\ncursor: pointer;\n`\n\nexport const ButtonSVG = styled.button<ButtonSvgProps>`\nwidth: 46ppx;\nheight: 46px;\npadding: 14px;\ngap: 10px;\nborder-radius: 30px;\nbackground-color: #FFF4DF;\n\nbackground-color: ${(props) => (props.$isDefaultFavorite ? '#FBE7C1' : '#FFF4DF')};\ncursor: pointer;\n\n&:hover{\n    background-color: #FBE7C1;\n}\n\n`\n\n\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\nposition: relative;\npadding-top: 40px;\n`\n\nexport const SvgButton = styled.div`\ndisplay: block;\nposition:absolute;\nright: 0; top: 0;\nborder: none;\nmargin-left: auto;\ncursor: pointer;\n`\n\nexport const ContainerSvg = styled.div`\ndisplay: block;\nmargin: 0 auto;\nmargin-bottom: 20px;\npadding:18px;\nwidth: 80px;\nheight: 80px;\nborder-radius: 50%;\nbackground-color: #FFF4DF;\n`\n\nexport const Img = styled.img`\ndisplay: block;\nmargin: auto;\n`\n\nexport const Title = styled.h2`\nmargin-bottom: 20px;\nfont-family: Manrope;\nfont-size: 20px;\nfont-weight: 700;\nline-height: 1;\nletter-spacing: -0.03em;\ntext-align: center;\ncolor: ${p => p.theme.colors.yellow};\n`\n\nexport const Text = styled.p`\nmargin-bottom: 20px;\nfont-family: Manrope;\nfont-size: 14px;\nfont-weight: 500;\nline-height: 1,29px;\nletter-spacing: -0.02em;\ntext-align: center;\ncolor: #2B2B2A;\n`","import Modal from \"react-modal\";\nimport { useEffect } from \"react\";\nimport {Container, SvgButton, ContainerSvg, Img, Title, Text} from './ModalAttention.styled';\nimport sprite from '../../images/sprite.svg';\nimport dog_small from '../../images/dog_small.jpg';\nimport React from \"react\";\n\nimport { AuthNav } from '../AuthNav/AuthNav';\n\ninterface ModalAttentionProps{\n  isOpenModalAttention:boolean,\n  setIsOpenModalAttention:(isOpenModalAttention:boolean)=>void\n}\n\nModal.setAppElement('#modal');\n\nexport const ModalAttention:React.FC<ModalAttentionProps> = ({ isOpenModalAttention, setIsOpenModalAttention }) => {\n\n\n    const customStyles = {\n      overlay: {\n        backgroundColor: \"rgba(38, 38, 38, 0.3)\",\n      },\n      content: {\n        top: \"50%\",\n        left: \"50%\",\n        right: \"auto\",\n        bottom: \"auto\",\n        marginRight: \"-50%\",\n        transform: \"translate(-50%, -50%)\",\n        padding: \"20px\",\n        maxWidth: \"335px\",\n        maxHeight: \"394px\",\n        borderRadius: \"30px\",\n        backgroundColor: \"#FFFFFF\",\n      },\n    };\n  \n    useEffect(() => {\n      if (isOpenModalAttention) {\n        document.body.classList.add('no-scroll');\n      } else {\n        document.body.classList.remove('no-scroll');\n      }\n  \n      return () => {\n        document.body.classList.remove('no-scroll');\n      };\n    }, [isOpenModalAttention]);\n    \n      return (\n        <>\n        <Modal   \n          isOpen={isOpenModalAttention}\n          onRequestClose={() => {\n            setIsOpenModalAttention(false);\n          }}\n               \n          style={customStyles}\n  \n          contentLabel=\"More info modal\"     \n        >\n  <Container>\n          <SvgButton\n             onClick={() => {\n                setIsOpenModalAttention(false);\n             }}>\n              <svg width= '24px' height='24px'>\n                  <use xlinkHref={sprite + '#icon-x'} />\n              </svg> \n           </SvgButton>\n\n           <ContainerSvg>\n             <Img src={dog_small} alt=\"small-dog\" width= '44px' height='44px'/>\n           </ContainerSvg>\n  \n           <Title>Attention</Title>\n  \n           <Text>We would like to remind you that certain functionality is available only to authorized users.If you have an account, please log in with your credentials.\n             If you do not already have an account, you must register to access these features.\n           </Text>\n\n           <AuthNav />\n  \n  </Container>\n  \n        </Modal>\n        </>\n      );\n    }; ","import styled from \"styled-components\";\n\nexport const Container = styled.div`\nposition: relative;\npadding-top: 40px;\n`\n\nexport const SvgButton = styled.div`\ndisplay: block;\nposition:absolute;\nright: 0; top: 0;\nborder: none;\nmargin-left: auto;\n`\nexport const ContainerImg = styled.div`\nposition: relative;\n`\n\nexport const Svg = styled.div`\nposition: absolute;\ntop: 0;\nleft: 30%;\ndisplay: block;\npadding: 8px 14px 8px 14px;\nwidth: 52px;\nheight: 34px;\nborder-radius: 30px;\nbackground-color: #FFF4DF;\n\nfont-family: Manrope;\nfont-size: 14px;\nfont-weight: 500;\nline-height: 1,29px;\nletter-spacing: -0.02em;\ntext-align: center;\n\ncolor: ${p => p.theme.colors.yellow};\n`\n\nexport const Img = styled.img`\ndisplay: block;\nmargin: auto;\nmargin-bottom: ${p => p.theme.spacing(4)};\nwidth: 120px;\nheight: 120px;\nborder-radius: 50%;\n`\n\nexport const Title = styled.h2`\nmargin-bottom: 8px;\nfont-family: Manrope;\nfont-size: 16px;\nfont-weight: 700;\nline-height: 1,25;\n\ntext-align: center;\ncolor: #2B2B2A;\n`\nexport const ContainerPopulate = styled.div`\ndisplay: flex;\njustify-content: center;\ngap: 64px;\nmargin-bottom: 8px;\n`\nexport const Rating = styled.p`\nfont-family: Manrope;\nfont-size: 14px;\nfont-weight: 500;\nline-height: 1,29;\n`\nexport const ContainerList= styled.ul`\ndisplay: flex;\njustify-content: space-between;\nlist-style: none;\nmargin-bottom: 14px;\n`\nexport const TitleTable= styled.p`\nfont-family: Manrope;\nfont-size: 10px;\nfont-weight: 500;\nline-height: 1,4;\nletter-spacing: -0.02em;\ncolor: #26262680;\n`\n\nexport const Text= styled.p`\nfont-family: Manrope;\nfont-size: 14px;\nfont-weight: 500;\nline-height: 1,29;\nletter-spacing: -0.02em;\n\ncolor: #2B2B2A;\n`\n\nexport const Comment= styled.p`\nmargin-bottom: 16px;\nfont-family: Manrope;\nfont-size: 14px;\nfont-weight: 500;\nline-height: 1,29;\nletter-spacing: -0.02em;\n\ncolor: #2B2B2A;\n`\n\nexport const ContainerButton= styled.div`\ndisplay: flex;\ngap: 8px;\njustify-content: center;\nalign-items: center;\n`\nexport const ButtonAdd= styled.button`\ndisplay: flex;\nmargin: auto;\nalign-items: center;\njustify-content: center;\ngap: 4px;\nbackground-color: ${p => p.theme.colors.yellow};\nborder-radius: 30px;\nwidth: 135px;\nheight: 44px;\n\nfont-family: Manrope;\nfont-size: 16px;\nfont-weight: 500;\nline-height: 1,25;\nletter-spacing: -0.03em;\ntext-align: center;\ncolor:${p => p.theme.colors.white};\ncursor: pointer;\n\n&:hover{\n    background-color: #F9B020;\n}\n`\n\nexport const ButtonContact= styled.a`\ndisplay: flex;\nmargin: auto;\nalign-items: center;\njustify-content: center;\nbackground-color: ${p => p.theme.colors.rose};\nborder-radius: 30px;\nwidth: 135px;\nheight: 44px;\n\nfont-family: Manrope;\nfont-size: 16px;\nfont-weight: 500;\nline-height: 1,25;\nletter-spacing: -0.03em;\ntext-align: center;\ncolor:${p => p.theme.colors.yellow};\n\n&:hover{\n    background-color: #FBE7C1;\n}\n`","import Modal from \"react-modal\";\nimport { useEffect, FC } from \"react\";\nimport {Container, SvgButton, ContainerImg, Svg, Img, Title, ContainerPopulate, Rating,ContainerList, TitleTable, Text,\n        Comment, ContainerButton, ButtonAdd, ButtonContact } from './ModalNotice.styled';\nimport sprite from '../../images/sprite.svg';\nimport {addNotices, removeNotices} from '../../redux/operations';\nimport { useDispatch } from \"react-redux\";\nimport { AppDispatch } from \"../../redux/store\";\n\n\n\nconst useAppDispatch:()=>AppDispatch=useDispatch;\n\ninterface NoticeProps{\n  imgURL:string ,\n  title:string , \n  popularity:string , \n  comment:string , \n  name:string , \n  birthday:string , \n  species:string , \n  sex:string , \n  category:string , \n  _id:string, \n  user:any \n}\n\ninterface ModalNoticeProps{\n  isOpenModalNotice:boolean, \n  setIsOpenModalNotice:(isOpenModalNotice:boolean)=>void, \n  notice:NoticeProps, \n  setFavorite:(isFavorite:boolean)=>void, \n  isFavorite:boolean\n}\n\nModal.setAppElement('#modal');\n\nexport const ModalNotice:FC<ModalNoticeProps> = ({ isOpenModalNotice, setIsOpenModalNotice, notice, setFavorite, isFavorite }) => {\n    const {imgURL ,title, popularity, comment, name, birthday, species, sex, category, _id, user}=notice;\n    const dispatch=useAppDispatch();\n\n    const customStyles = {\n      overlay: {\n        backgroundColor: \"rgba(38, 38, 38, 0.3)\",\n       \n      },\n      content: {\n        top: \"50%\",\n        left: \"50%\",\n        right: \"auto\",\n        bottom: \"auto\",\n        marginRight: \"-50%\",\n        transform: \"translate(-50%, -50%)\",\n        padding: \"20px\",\n        maxWidth: \"335px\",\n        maxHeight: \"446px\",\n        borderRadius: \"30px\",\n        backgroundColor: \"#FFFFFF\",\n      },\n    };\n\n    useEffect(() => {\n      if (isOpenModalNotice) {\n        document.body.classList.add('no-scroll');\n      } else {\n        document.body.classList.remove('no-scroll');\n      }\n  \n      return () => {\n        document.body.classList.remove('no-scroll');\n      };\n    }, [isOpenModalNotice]);\n\n    const handleAddFavorite = (_id:string) => {\n      if (!isFavorite) {\n          dispatch(addNotices(_id));\n          setFavorite(true)\n      } else {\n        dispatch(removeNotices(_id));\n        setFavorite(false)\n      }\n  };\n\n      return (\n        <>\n        <Modal   \n          isOpen={isOpenModalNotice}\n          onRequestClose={() => {\n            setIsOpenModalNotice(false);\n          }}\n               \n          style={customStyles}\n          contentLabel=\"More info modal\"     \n        >\n  <Container>\n          <SvgButton\n             onClick={() => {\n                setIsOpenModalNotice(false);\n             }}>\n              <svg width= '24px' height='24px'>\n                  <use xlinkHref={sprite + '#icon-x'} />\n              </svg> \n           </SvgButton>\n\n           <ContainerImg>\n            <Img src={imgURL} alt={title} />\n\n            <Svg>{category}</Svg>            \n           </ContainerImg>\n     \n           <Title>{title}</Title>\n\n           <ContainerPopulate>\n                 <svg width={16} height={16}>\n                    <use xlinkHref={sprite + '#icon-star'} />\n                 </svg>      \n                 <Rating>{popularity}</Rating>          \n              </ContainerPopulate>\n              <ContainerList>\n\n                 <li>\n                    <TitleTable>Name</TitleTable>\n                    <Text>{name}</Text>\n                 </li>\n                 <li>\n                    <TitleTable>Birthday</TitleTable>\n                    <Text>{birthday}</Text>\n                 </li>\n                 <li>\n                    <TitleTable>Sex</TitleTable>\n                    <Text>{sex}</Text>\n                 </li>\n                 <li>\n                    <TitleTable>Species</TitleTable>\n                    <Text>{species}</Text>\n                 </li>\n              </ContainerList>\n\n              <Comment>{comment}</Comment>\n\n              <ContainerButton>\n                <ButtonAdd type=\"button\" onClick={() => handleAddFavorite(_id)}> Add to\n                     <svg width={16} height={16}>\n                         <use xlinkHref={sprite + '#icon-heart-3'} />\n                     </svg>  \n                </ButtonAdd>\n                {user?.phone && (\n                  <ButtonContact as=\"a\" href={`tel:${user.phone}`}>Contact</ButtonContact>\n                )}\n              </ContainerButton>\n    \n  </Container>\n  \n        </Modal> \n        </>\n      );\n    }; ","import sprite from '../../images/sprite.svg';\nimport {Button,Title, Img, ContainerList, ContainerTitle, ContainerPopulate,\n        Rating, TitleTable, Comment, ContainerButton, ContainerItem, ButtonSVG\n} from './NoticeItrm.styled';\nimport {ModalAttention} from '../ModalAttention/ModalAttention';\nimport {ModalNotice} from '../ModalNotice/ModalNotice';\nimport { useState } from 'react';\nimport { useSelector,useDispatch } from 'react-redux';\nimport {selectIsLoggedIn} from '../../redux/auth/selects';\nimport {selectorFavorite, selectorNoticesId} from '../../redux/selects';\nimport {addNotices, removeNotices, fetchNoticesId, fetchUserFull} from '../../redux/operations';\nimport { AppDispatch } from '../../redux/store';\n\nconst useAppDispatch:()=>AppDispatch=useDispatch;\n\n \nexport const NoticesItem=({notice, trash})=>{\n\n    const dispatch=useAppDispatch();\n\n    const isLoggedIn = useSelector(selectIsLoggedIn);\n    \n    const favorites = useSelector(selectorFavorite);\n    const noticeId=useSelector(selectorNoticesId);\n   \n    const {imgURL ,title, popularity, comment, name, birthday, species, category, sex, _id}=notice;\n    const [isOpenModalAttention, setIsOpenModalAttention ] =useState(false);\n    const [isOpenModalNotice, setIsOpenModalNotice ] =useState(false);\n    const [isFavorite, setFavorite]=useState(favorites.includes(_id));\n\n    const openModalAttention=()=>{\n        setIsOpenModalAttention(true);\n    }\n\n    const openModalNotice=()=>{\n        setIsOpenModalNotice(true);\n    }\n\n    const handleAction = (_id:string) => {\n        if (isLoggedIn) {\n            openModalNotice();\n            dispatch(fetchNoticesId(_id))\n        } else {\n            openModalAttention();\n        }\n    }\n\n    const handleToggetFavorite = (_id:string) => {\n        if (!isFavorite) {\n            dispatch(addNotices(_id)); \n            setFavorite(true)\n           console.log( favorites)\n        } else\n     {      dispatch(removeNotices(_id));\n            setFavorite(false)\n            console.log( favorites)}\n    };\n\n    const handleActionFavorite = (_id:string) => {\n        if (isLoggedIn) {\n            handleToggetFavorite(_id);\n        } else {\n            openModalAttention();\n        }\n    };\n\n    const handleDeleteFavorite = async (_id:string) => {\n        try {\n            await dispatch(removeNotices(_id));\n            setFavorite(false);\n            await dispatch(fetchUserFull());\n        } catch (error) {\n            console.error(\"Error deleting favorite notice:\", error);\n        }\n    };\n\n    return(\n        <ContainerItem>\n            <Img src= {imgURL} alt={title}/>\n           <ContainerTitle>\n              <Title>{title}</Title>\n              <ContainerPopulate>\n                 <svg width={16} height={16}>\n                    <use xlinkHref={sprite + '#icon-star'} />\n                 </svg>      \n                 <Rating>{popularity}</Rating>          \n              </ContainerPopulate>\n            </ContainerTitle>  \n\n            <ContainerList>\n\n                <li>\n                    <TitleTable>Name</TitleTable>\n                    <p>{name}</p>\n                </li>\n                <li>\n                    <TitleTable>Birthday</TitleTable>\n                    <p>{birthday}</p>\n                </li>\n                <li>\n                    <TitleTable>Sex</TitleTable>\n                    <p>{sex}</p>\n                </li>\n                <li>\n                    <TitleTable>Species</TitleTable>\n                    <p>{species}</p>\n                </li>\n                <li>\n                    <TitleTable>Category</TitleTable>\n                    <p>{category}</p>\n                </li>\n                 \n            </ContainerList>\n            \n           <Comment>{comment}</Comment>\n           <ContainerButton>\n            \n               <Button type='button' onClick={()=>handleAction(_id)}>Learn more</Button>\n               {trash&&\n               <ButtonSVG onClick={() => handleDeleteFavorite(_id)}>\n                   <svg width={18} height={18}>\n                      <use xlinkHref={sprite + '#icon-trash-2'} />\n                   </svg>                \n               </ButtonSVG>}\n\n               {!trash&&<ButtonSVG $isDefaultFavorite={isFavorite} onClick={() => handleActionFavorite(_id)}>\n                   <svg width={18} height={18}>\n                      <use xlinkHref={sprite + '#icon-heart'} />\n                   </svg>                \n               </ButtonSVG>}\n               \n           </ContainerButton>\n\n           <ModalAttention isOpenModalAttention={isOpenModalAttention} setIsOpenModalAttention={setIsOpenModalAttention}/>\n           <ModalNotice notice={noticeId}  \n           setFavorite={setFavorite} isFavorite={isFavorite} \n           isOpenModalNotice={isOpenModalNotice} setIsOpenModalNotice={setIsOpenModalNotice}/>\n        \n        </ContainerItem>\n    )\n}","import styled from \"styled-components\";\n\n\nexport const Container = styled.ul`\n\nlist-style: none;\n\ndisplay: grid;\n    grid-template-columns: 1fr;\n    gap: 16px;\n\n    @media (min-width: 768px) and (max-width: 1279px) {\n        grid-template-columns: 1fr 1fr; \n    }\n\n    @media (min-width: 1280px) {\n        grid-template-columns: 1fr 1fr 1fr; \n    }\n`\n\n","import {NoticesItem} from '../NoticesItem/NoticesItem';\nimport {Container} from './NoticeList.styled';\nimport React from 'react';\n\ninterface NoticeProps{\n    imgURL:string,\n    title:string, \n    popularity:string, \n    comment:string, \n    name:string, \n    birthday:string, \n    species:string, \n    category:string, \n    sex:string, \n    _id:string\n}\n\ninterface NotticeListProps{\n    notices:NoticeProps[],\n    trash:boolean\n}\n\nexport const NoticesList:React.FC<NotticeListProps>=({notices, trash=false})=>{\n\n    return (\n        <Container>\n            {notices?.map(iterm=>( \n            <NoticesItem key={iterm._id} notice={iterm} trash={trash}/>\n        ))}\n        \n        </Container>\n    )\n}","import { RootState } from \"../redux/store\";\n\n\n  \n  export const selectorNews=(state:RootState)=>state.news.news;\n  export const selectorTotalPages=(state:RootState)=>state.news.totalPages;\n  export const selectorTotPages=(state:RootState)=>state.notices.totalPages;\n  export const selectorNotices=(state:RootState)=>state.notices.notices;\n  export const selectorNoticesId=(state:RootState)=>state.notices.noticeId;\n  export const selectorFavorite=(state:RootState)=>state.notices.isFavorite;\n  export const selectorFriends=(state:RootState)=>state.friends.friends;\n  export const selectorPets=(state:RootState)=>state.user.pets;\n  export const selectorUserFull=(state:RootState)=>state.user.userFull;","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}"],"names":["Container","styled","div","ContainerButton","ButtonUser","button","p","theme","colors","yellow","white","Svg","svg","ContainerSvg","SvgEdit","SvgButton","Title","h5","spacing","UserAvatar","img","ContainerInput","InputWrapper","Input","input","_ref","$isError","$isSuccess","ButtonLoad","ButtonLoadSpan","span","SuccessMessage","Error","Button","useAppDispatch","useDispatch","Modal","SignupSchema","Yup","shape","name","required","avatar","matches","phone","email","ModalEditUser","isModalEditUser","setModalEditUser","isAvatar","setAvatar","useState","dispatch","user","useSelector","selectorUserFull","defaultValues","register","handleSubmit","formState","errors","touchedFields","watch","useForm","resolver","yupResolver","mode","useEffect","document","body","classList","add","remove","_jsx","_Fragment","children","isOpen","onRequestClose","style","overlay","backgroundColor","content","top","left","right","bottom","marginRight","transform","padding","borderRadius","contentLabel","_jsxs","onClick","width","height","xlinkHref","sprite","onSubmit","async","info","data","fetchUserEdit","error","NotificationManager","message","src","alt","defaultAvatar","id","placeholder","pattern","value","type","handleLoadingAvatar","EditUserBtn","handleModalEditUser","UserInfo","User","props","$isDefault","UserUpload","UserTitle","UserBlock","avatarUrl","userName","userEmail","userPhone","isDefaultName","isDefaultEmail","isDefaultPhone","AddPet","navigate","useNavigate","handleAddPeet","DeleteButton","li","Img","ContainerInfo","ContainerTitle","ContainerTable","TitleTable","TextTable","PetsItem","pet","imgURL","title","birthday","sex","species","_id","removePet","handleDelete","ul","PetsList","pets","fetchUserFull","map","PetsBlock","UserCard","LogOutBtn","NoFavoriteText","NoFavoriteSpan","MyNotices","isFavoritePets","setIsFavoritePets","isViewed","setVeiwed","hasFavorites","setHasFavorites","userFull","favorites","noticesFavorites","viewed","noticesViewed","handleFavoritList","length","handleVeiwed","NoticesList","notices","trash","Profile","ContainerItem","h3","Rating","ContainerList","ContainerPopulate","Comment","ButtonSVG","$isDefaultFavorite","h2","Text","ModalAttention","isOpenModalAttention","setIsOpenModalAttention","maxWidth","maxHeight","AuthNav","ContainerImg","ButtonAdd","ButtonContact","a","rose","ModalNotice","isOpenModalNotice","setIsOpenModalNotice","notice","setFavorite","isFavorite","popularity","comment","category","removeNotices","addNotices","handleAddFavorite","as","href","NoticesItem","isLoggedIn","selectIsLoggedIn","selectorFavorite","noticeId","selectorNoticesId","includes","openModalAttention","handleAction","fetchNoticesId","handleActionFavorite","console","log","handleToggetFavorite","handleDeleteFavorite","iterm","selectorNews","state","news","selectorTotalPages","totalPages","selectorNotices","selectorFriends","friends","_assertThisInitialized","self","ReferenceError","_extends","Object","assign","bind","target","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","_setPrototypeOf","o","setPrototypeOf","__proto__"],"sourceRoot":""}